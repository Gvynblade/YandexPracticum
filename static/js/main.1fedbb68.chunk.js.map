{"version":3,"sources":["components/pages/burger-main.module.scss","components/burger-ingredients/burger-ingredients.module.scss","components/burger-ingredients/ingredients-box.module.scss","components/burger-ingredients/ingredients-switcher.module.scss","components/feed-components/feed-right.module.scss","components/modal/modal-overlay/modal-overlay.module.scss","components/profile-tabs/profile-orders-history.module.scss","components/pages/not-found.module.scss","components/feed-components/feed-left.module.scss","components/pages/order.module.scss","components/burger-ingredients/ingredient-details.module.scss","services/hooks.ts","utils/cookie.ts","api/api.ts","services/middleware/wsMiddleware.ts","services/actions/auth.ts","components/app-header/app-header.tsx","components/burger-ingredients/burger-ingredients.tsx","components/burger-ingredients/ingredient-details.tsx","components/burger-ingredients/ingredients-section/ingredient.tsx","components/burger-ingredients/ingredients-section/ingredients-section.tsx","images/spinner.gif","components/common/preloader.tsx","services/actions/ingredients.ts","services/actions/app.ts","components/burger-ingredients/ingredients-box.tsx","components/burger-ingredients/ingredients-switcher.tsx","services/actions/constructor.ts","images/order-icon.svg","services/actions/order.ts","components/burger-constructor/burger-constructor.tsx","components/burger-constructor/constructor-ingredients.tsx","components/modal/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-constructor/constructor-total-price.tsx","components/burger-constructor/draggable-element.tsx","components/burger-constructor/order-details.tsx","components/pages/burger-main.tsx","components/pages/login.tsx","components/pages/register.tsx","components/pages/forgot-password.tsx","components/pages/reset-password.tsx","components/profile-tabs/profile-edit-data.tsx","services/actions/web-socket.ts","components/profile-tabs/profile-orders-history.tsx","components/profile-tabs/profile-orders-item.tsx","components/pages/profile.tsx","images/warning-exclamation-mark-light-blue.svg","components/pages/not-found.tsx","components/pages/ingredient.tsx","components/feed-components/feed-left.tsx","components/feed-components/feed-right.tsx","components/feed-components/feed-order-element.tsx","components/pages/feed.tsx","components/order/order-details.tsx","components/pages/order.tsx","services/reducers/app.ts","services/reducers/ingredients.ts","services/reducers/constructor.ts","services/reducers/order.ts","services/reducers/auth.ts","services/reducers/webSocket.ts","services/store.ts","components/hoc/protected-route.tsx","components/hoc/component-switcher.tsx","components/app/app.tsx","reportWebVitals.ts","index.tsx","components/pages/profile.module.scss","components/profile-tabs/profile-orders-item.module.scss","components/order/order-details.module.scss","components/app-header/app-header.module.scss","components/feed-components/feed-order-element.module.scss","components/pages/ingredient.module.scss","components/burger-ingredients/ingredients-section/ingredient.module.scss","components/burger-constructor/burger-constructor.module.scss","components/burger-ingredients/ingredients-section/ingredients-section.module.scss","components/modal/modal.module.scss","components/common/preloader.module.scss","components/burger-constructor/constructor-total-price.module.scss","components/burger-constructor/order-details.module.scss","components/pages/feed.module.scss"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","wsActions","APIUrlOrders","APIUrlUserData","ingredientsAPI","fetch","headers","response","json","ordersAPI","payload","method","Authorization","body","JSON","stringify","userAPI","token","localStorage","getItem","REGISTRATION_REQUEST","REGISTRATION_SUCCESS","REGISTRATION_ERROR","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","REQUEST_NEW_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","SET_AUTHORISED","SET_NO_AUTHORISED","GET_USER_DATA","GET_USER_DATA_SUCCES","GET_USER_DATA_ERROR","UPDATE_USER_DATA","UPDATE_USER_DATA_SUCCES","UPDATE_USER_DATA_ERROR","REQUEST_LOGOUT","REQUEST_LOGOUT_SUCCES","REQUEST_LOGOUT_ERROR","AppHeader","dispatch","location","useLocation","useEffect","type","isAuthorised","className","styles","header","nav","to","navItem","activeClassName","pathname","active","indexOf","logo","BurgerIngredients","section","IngredientDetails","modalData","store","burgerIngredients","ingredientBox","src","image_large","alt","ingredientImg","ingredientInfo","ingredientInfo__item","ingredientInfo__name","ingredientInfo__value","calories","proteins","fat","carbohydrates","Ingredient","data","handleModalOpen","useDrag","item","_id","collect","monitor","isDrag","isDragging","dragRef","ingredient","onClick","ref","__v","ingredient__counter","count","size","image","ingredient__price","price","ingredient__title","IngredientsSection","React","forwardRef","ingredients","section__title","section__flex","map","i","Preloader","preloader","preloaderIcon","preloader_description","INGREDIENTS_REQUEST","INGREDIENTS_SUCCESS","INGREDIENTS_ERROR","SET_MODAL_DATA","REMOVE_MODAL_DATA","SET_CURRENT_TAB","INCREASE_ITEM_COUNTER","DECREASE_ITEM_COUNTER","CLEAR_ITEMS_COUNTER","TOGGLE_IS_FETCHING","MODAL_OPEN","MODAL_CLOSE","IngredientsBox","ingredientsRequest","history","useHistory","useState","buns","sauces","mains","scrollPosition","setScrollPosition","forEach","push","isModalOpen","modalType","parentRef","useRef","bunsRef","saucesRef","mainsRef","ingredientsBox","onScroll","e","element","current","offsetTop","parentScroll","target","scrollTop","currentTab","handleScroll","IngredientsSwitcher","block","ADD_INGREDIENT","DELETE_INGREDIENT","REPLACE_ITEMS","CLEAR_CONSTRUCTOR","CALCULATE_ORDER_PRICE","ORDER_DATA_REQUEST","ORDER_DATA_SUCCESS","ORDER_DATA_ERROR","ORDER_DATA_RESET","ORDERS_LIST_DATA_REQUEST","ORDERS_LIST_DATA_SUCCESS","ORDERS_LIST_DATA_ERROR","BurgerConstructor","burgerConstructor","bun","ingredientsData","isHasBun","useDrop","accept","drop","itemId","onDropHandler","isHover","isOver","dropTarget","find","hash","Math","floor","random","id","dropbox","dropHover","placeholder","ConstructorIngredients","isLocked","text","thumbnail","image_mobile","index","key","ModalOverlay","overlay","stopPropagation","onClose","children","modalRoot","getElementById","Modal","app","escFunction","keyCode","handleModalClose","addEventListener","removeEventListener","go","ReactDOM","createPortal","modal","modalCloseBtn","ConstructorTotalPrice","order","auth","priceBox","priceIcon","ingredientsID","ingredientIDs","a","orderDataRequest","newTokenResponse","success","authToken","accessToken","split","setItem","refreshToken","console","log","orderData","orderID","number","statusIcon","succesOrderIcon","orderStatus","orderDescription","orderDataSuccess","error","DraggableElement","drag","hover","dragIndex","hoverindex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","replaceItem","hoverIndex","handleClose","OrderDetails","modalFlex","secondaryColor","BurgerMain","DndProvider","backend","HTML5Backend","LoginPage","logoutRequest","loginSuccess","state","email","password","loginForm","setLoginForm","handleChange","action","from","onSubmit","formData","preventDefault","loginRequest","userInfo","user","icon","errorText","onChange","RegisterPage","registrationSuccess","registerForm","setRegisterForm","registrationRequest","ForgotPasswordPage","forgotPasswordSuccess","requestPasswordForm","setRequestPasswordForm","forgotPasswordRequest","isResetPaswordRequested","ResetPasswordPage","resetPasswordSuccess","resetPasswordForm","setResetPasswordForm","resetPasswordRequest","ProfileEditData","getUserDataRequest","getUserDataSuccess","setUserData","userData","isInpuputChanged","setIsInputChanged","updateUserDataRequest","updateUserDataSuccess","WS_CONNECTION_START","WS_CONNECTION_STOP","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","ProfileOrdersHistory","webSocket","url","isToken","orderElements","orders","length","date","createdAt","status","ingredientsImages","reverse","ProfileOrdersItem","ingredientsList","ordersItem__ingredient","style","zIndex","ordersItem__counter","ordersItem","ordersItem__header","locale","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","order__success","ordersItem__footer","ordersItem__ingredients","ordersItem__price","ProfilePage","profile","profile__nav","navLink","removeItem","logoutSuccess","exact","path","gray","profile__body","NotFoundPage","page","IngredientPage","ingredientsSuccess","useParams","isFetching","setIsFetching","isWrongID","setIsWrongID","ingredient__wrongID","FeedLeftColumn","feedColumn","FeedRightColumn","total","totalToday","ordersSuccess","col1","col2","ordersInProgress","succes","inProgress","succes1","success2","ordersList__item","ready","inProgress1","inProgress2","ordersList","ordersList__ready","ordersList__header","ordersList__col1","ordersList__col2","ordersList__inProgress","ordersCounter","FeedOrderElement","element__ingredient","element__counter","element__header","element__footer","element__ingredients","element__price","FeedPage","feed","feed__heading","ordersListRequest","ordersListSuccess","orderPrice","ingredients2","reduce","acc","rec","ingredient_img","order__box","order__number","order__ingredientsBox","order__footer","order__price","OrderPage","initialState","appReducer","ingredientsReducer","newItems","constructorReducer","filter","replacingIngredient","newIngredients","splice","orderReducer","authReducer","wsConnected","wsReducer","rootReducer","combineReducers","wsInit","wsStop","wsSendMessage","onOpen","onError","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","getState","isTokenReqired","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","onclose","message","send","close","createStore","ProtectedRoute","rest","render","ComponentSwitcher","ComponentPage","ComponentModal","modalName","modalHeader","App","AppContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.1fedbb68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerMain\":\"burger-main_BurgerMain__hwMv5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__3-AoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsBox\":\"ingredients-box_ingredientsBox__opvcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ingredients-switcher_block__jKPCu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedColumn\":\"feed-right_feedColumn__23AgL\",\"ordersList\":\"feed-right_ordersList__33q-J\",\"ordersList__ready\":\"feed-right_ordersList__ready__14jKI\",\"ordersList__inProgress\":\"feed-right_ordersList__inProgress__2SSJB\",\"ordersList__header\":\"feed-right_ordersList__header__2F2t7\",\"ordersList__col1\":\"feed-right_ordersList__col1__1La4Y\",\"ordersList__col2\":\"feed-right_ordersList__col2__3dTeK\",\"ordersList__item\":\"feed-right_ordersList__item__10dFy\",\"ready\":\"feed-right_ready__3FQr3\",\"ordersCounter\":\"feed-right_ordersCounter__34NB1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3CzER\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"profile-orders-history_orders__36-U1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"not-found_page__19qM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedColumn\":\"feed-left_feedColumn__1aZuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order_order__1wKAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientBox\":\"ingredient-details_ingredientBox__13TO3\",\"ingredientImg\":\"ingredient-details_ingredientImg__2xqps\",\"ingredientInfo\":\"ingredient-details_ingredientInfo__1n8Bw\",\"ingredientInfo__item\":\"ingredient-details_ingredientInfo__item__3skvY\"};","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, RootState, AppThunk } from './types/index'\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n","export function setCookie(name: string, value: string, props: any) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n","import {getCookie} from '../utils/cookie'\r\n\r\nconst APIUrlIngredients = 'https://norma.nomoreparties.space/api/ingredients'\r\n\r\nconst APIUrlOrders = 'https://norma.nomoreparties.space/api/orders'\r\nconst APIUrlOrdersAll = 'https://norma.nomoreparties.space/api/orders/all'\r\n\r\nconst APIUrlRegister = 'https://norma.nomoreparties.space/api/auth/register'\r\nconst APIUrlLogin = 'https://norma.nomoreparties.space/api/auth/login'\r\nconst APIUrlLogout = 'https://norma.nomoreparties.space/api/auth/logout'\r\nconst APIUrlRequestPasswordReset = 'https://norma.nomoreparties.space/api/password-reset'\r\nconst APIUrlResetPAssword = 'https://norma.nomoreparties.space/api/password-reset/reset'\r\nconst APIUrlUpdateToken = 'https://norma.nomoreparties.space/api/auth/token'\r\nconst APIUrlUserData = 'https://norma.nomoreparties.space/api/auth/user'\r\n\r\nexport const ingredientsAPI = {\r\n\r\n    async requestIngredients() {\r\n\r\n        let response = await fetch(APIUrlIngredients, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            }\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n}\r\n\r\nexport const ordersAPI = {\r\n\r\n    async postOrder(payload: string[]) {\r\n        let response = await fetch(APIUrlOrders, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n            body: JSON.stringify({\r\n                \"ingredients\": payload\r\n            })\r\n        })\r\n        response = await response.json()\r\n        return {\r\n            ...response\r\n        }\r\n\r\n    },\r\n    async getUserOrders() {\r\n        let response = await fetch(APIUrlOrders, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async getALLOrders() {\r\n        let response = await fetch(APIUrlOrdersAll, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n\r\n}\r\n\r\nexport const userAPI = {\r\n\r\n    async login(payload: {\r\n        email: string,\r\n        password: string\r\n    }) {\r\n        let response = await fetch(APIUrlLogin, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async logout() {\r\n        let response = await fetch(APIUrlLogout, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify({\r\n                token: localStorage.getItem('refreshToken')\r\n            })\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async register(\r\n        payload: {\r\n            name: string,\r\n            email: string,\r\n            password: string\r\n        }\r\n    ) {\r\n        let response = await fetch(APIUrlRegister, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async requestPasswordReset(payload: {\r\n        email: string\r\n    }) {\r\n        let response = await fetch(APIUrlRequestPasswordReset, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async resetPassword(payload: {\r\n        password: string,\r\n        token: string\r\n    }) {\r\n        let response = await fetch(APIUrlResetPAssword, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async updateToken() {\r\n        let response = await fetch(APIUrlUpdateToken, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n            },\r\n            body: JSON.stringify({\r\n                token: localStorage.getItem('refreshToken')\r\n            })\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async getUserData() {\r\n        let response = await fetch(APIUrlUserData, {\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            }\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n    async patchUserData(payload: {\r\n        name?: string,\r\n        email?: string,\r\n        password?: string\r\n    }) {\r\n        let response = await fetch(APIUrlUserData, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json;charset=utf-8',\r\n                Authorization: 'Bearer ' + getCookie('token')\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        response = await response.json()\r\n        return response\r\n    },\r\n\r\n}\r\n","import { getCookie } from '../../utils/cookie'\r\nimport { TWsActions } from '../store'\r\n\r\nexport const socketMiddleware = (wsActions: TWsActions) => {\r\n    return (store: any) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return (next: any) => (action: any) => {\r\n            const { dispatch, getState } = store;\r\n            const { type, payload } = action;\r\n            const { wsInit, wsStop, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n\r\n            if (type === wsInit) {\r\n                const isTokenReqired = payload.isToken\r\n                const accessToken = getCookie('token')\r\n                const url = isTokenReqired? payload.url + `?token=${accessToken}` : payload.url\r\n                socket = new WebSocket(url);\r\n            }\r\n\r\n            if (socket) {\r\n\r\n                // функция, которая вызывается при открытии сокета\r\n                socket.onopen = (event: any) => {\r\n                    dispatch({ type: onOpen, payload: event });\r\n                };\r\n\r\n                // функция, которая вызывается при ошибке соединения\r\n                socket.onerror = (event: any) => {\r\n                    dispatch({ type: onError, payload: event });\r\n                };\r\n\r\n                // функция, которая вызывается при получения события от сервера\r\n                socket.onmessage = (event: any) => {\r\n                    const { data } = event;\r\n                    const parsedData = JSON.parse(data);\r\n                    dispatch({ type: onMessage, payload: parsedData });\r\n                };\r\n                // функция, которая вызывается при закрытии соединения\r\n                socket.onclose = (event: any) => {\r\n                    dispatch({ type: onClose, payload: event });\r\n                };\r\n\r\n                if (type === wsSendMessage) {\r\n                    const message = payload;\r\n                    socket.send(JSON.stringify(message));\r\n                }\r\n\r\n                if (type === wsStop) {\r\n                    socket.close(1000, 'Нормальное закрытие без ошибок.')\r\n                }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    };\r\n};\r\n","import { userAPI } from '../../api/api'\r\nimport { getCookie, setCookie } from '../../utils/cookie'\r\nimport { AppDispatch } from '../types/index'\r\n\r\nexport const REGISTRATION_REQUEST = 'authReducer/REGISTRATION_REQUEST' as const;\r\nexport const REGISTRATION_SUCCESS = 'authReducer/REGISTRATION_SUCCESS' as const;\r\nexport const REGISTRATION_ERROR = 'authReducer/REGISTRATION_ERROR' as const;\r\n\r\nexport const LOGIN_REQUEST = 'authReducer/LOGIN_REQUEST' as const;\r\nexport const LOGIN_SUCCESS = 'authReducer/LOGIN_SUCCESS' as const;\r\nexport const LOGIN_ERROR = 'authReducer/LOGIN_ERROR' as const;\r\n\r\nexport const FORGOT_PASSWORD = 'authReducer/FORGOT_PASSWORD' as const;\r\nexport const FORGOT_PASSWORD_SUCCESS = 'authReducer/FORGOT_PASSWORD_SUCCESS' as const;\r\nexport const FORGOT_PASSWORD_ERROR = 'authReducer/FORGOT_PASSWORD_ERROR' as const;\r\n\r\nexport const REQUEST_NEW_PASSWORD = 'authReducer/REQUEST_NEW_PASSWORD' as const;\r\nexport const RESET_PASSWORD_SUCCESS = 'authReducer/RESET_PASSWORD_SUCCESS' as const;\r\nexport const RESET_PASSWORD_ERROR = 'authReducer/RESET_PASSWORD_ERROR' as const;\r\n\r\nexport const SET_AUTHORISED = 'authReducer/SET_AUTHORISED' as const;\r\nexport const SET_NO_AUTHORISED = 'authReducer/SET_AUTHORISED' as const;\r\n\r\nexport const GET_USER_DATA = 'authReducer/GET_USER_DATA' as const;\r\nexport const GET_USER_DATA_SUCCES = 'authReducer/GET_USER_DATA_SUCCES' as const;\r\nexport const GET_USER_DATA_ERROR = 'authReducer/GET_USER_DATA_ERROR' as const;\r\n\r\nexport const UPDATE_USER_DATA = 'authReducer/UPDATE_USER_DATA' as const;\r\nexport const UPDATE_USER_DATA_SUCCES = 'authReducer/UPDATE_USER_DATA_SUCCES' as const;\r\nexport const UPDATE_USER_DATA_ERROR = 'authReducer/UPDATE_USER_DATA_ERROR' as const;\r\n\r\nexport const REQUEST_LOGOUT = 'authReducer/REQUEST_LOGOUT' as const;\r\nexport const REQUEST_LOGOUT_SUCCES = 'authReducer/REQUEST_LOGOUT_SUCCES' as const;\r\nexport const REQUEST_LOGOUT_ERROR = 'authReducer/REQUEST_LOGOUT_ERROR' as const;\r\n\r\nexport interface IRegistrationRequest {\r\n    readonly type: typeof REGISTRATION_REQUEST;\r\n    readonly payload: {\r\n        registrationRequest: true\r\n    }\r\n}\r\n\r\nexport interface IRegistrationSuccess {\r\n    readonly type: typeof REGISTRATION_SUCCESS;\r\n    readonly payload: {\r\n        isAuthorised: true,\r\n        userInfo: {\r\n            email: string,\r\n            name: string\r\n        },\r\n        registrationRequest: false,\r\n        registrationSuccess: true\r\n    }\r\n}\r\n\r\nexport interface IRegistrationError {\r\n    readonly type: typeof REGISTRATION_ERROR;\r\n    readonly payload: {\r\n        registrationRequest: false,\r\n        registrationSuccess: false\r\n    }\r\n}\r\n\r\nexport interface ILoginRequest {\r\n    readonly type: typeof LOGIN_REQUEST;\r\n    readonly payload: {\r\n        loginRequest: true\r\n    }\r\n}\r\n\r\nexport interface ILoginSuccess {\r\n    readonly type: typeof LOGIN_SUCCESS;\r\n    readonly payload: {\r\n        isAuthorised: true,\r\n        userInfo: {\r\n            email: string,\r\n            name: string\r\n        },\r\n        loginRequest: false,\r\n        loginSuccess: true\r\n    }\r\n}\r\n\r\nexport interface ILoginError {\r\n    readonly type: typeof LOGIN_ERROR;\r\n    readonly payload: {\r\n        loginRequest: false,\r\n        loginSuccess: false\r\n    }\r\n}\r\n\r\nexport interface IForgotPassword {\r\n    readonly type: typeof FORGOT_PASSWORD;\r\n    readonly payload: {\r\n        forgotPasswordRequest: true,\r\n    }\r\n}\r\n\r\nexport interface IForgotPasswordSuccess {\r\n    readonly type: typeof FORGOT_PASSWORD_SUCCESS;\r\n    readonly payload: {\r\n        forgotPasswordSuccess: true,\r\n        forgotPasswordRequest: false,\r\n        isResetPaswordRequested: true\r\n    }\r\n}\r\n\r\nexport interface IForgotPasswordError {\r\n    readonly type: typeof FORGOT_PASSWORD_ERROR;\r\n    readonly payload: {\r\n        forgotPasswordRequest: false,\r\n        forgotPasswordSuccess: false\r\n    }\r\n}\r\n\r\nexport interface IRequestNewPassword {\r\n    readonly type: typeof REQUEST_NEW_PASSWORD;\r\n    readonly payload: {\r\n        resetPasswordRequest: true,\r\n    }\r\n}\r\n\r\nexport interface IResetPasswordSuccess {\r\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n    readonly payload: {\r\n        resetPasswordRequest: false,\r\n        resetPasswordSuccess: true,\r\n        isResetPaswordRequested:false\r\n    }\r\n}\r\n\r\nexport interface IResetPasswordError {\r\n    readonly type: typeof RESET_PASSWORD_ERROR;\r\n    readonly payload: {\r\n        resetPasswordRequest: false,\r\n        resetPasswordSuccess: false\r\n    }\r\n}\r\n\r\nexport interface ISetAuthorised {\r\n    readonly type: typeof SET_AUTHORISED;\r\n    readonly payload: {\r\n        isAuthorised: true\r\n    }\r\n}\r\n\r\nexport interface ISetUnAuthorised {\r\n    readonly type: typeof SET_NO_AUTHORISED;\r\n    readonly payload: {\r\n        isAuthorised: false\r\n    }\r\n}\r\n\r\nexport interface IGetUserData {\r\n    readonly type: typeof GET_USER_DATA;\r\n    readonly payload: {\r\n        getUserDataRequest: true,\r\n    }\r\n}\r\n\r\nexport interface IGetUserDataSuccess {\r\n    readonly type: typeof GET_USER_DATA_SUCCES;\r\n    readonly payload: {\r\n        getUserDataRequest: false,\r\n        getUserDataSuccess: true,\r\n        userInfo: {\r\n            email: string,\r\n            name: string\r\n        },\r\n    }\r\n}\r\n\r\nexport interface IGetUserDataError {\r\n    readonly type: typeof GET_USER_DATA_ERROR;\r\n    readonly payload: {\r\n        getUserDataRequest: false,\r\n        getUserDataSuccess: false,\r\n    }\r\n}\r\n\r\nexport interface IUpdateUserData {\r\n    readonly type: typeof UPDATE_USER_DATA;\r\n    readonly payload: {\r\n        updateUserDataRequest: true,\r\n    }\r\n}\r\n\r\nexport interface IUpdateUserDataSuccess {\r\n    readonly type: typeof UPDATE_USER_DATA_SUCCES;\r\n    readonly payload: {\r\n        updateUserDataRequest: false,\r\n        updateUserDataSuccess: true,\r\n        userInfo: {\r\n            email: string,\r\n            name: string\r\n        }\r\n    }\r\n}\r\n\r\nexport interface IUpdateUserDataError {\r\n    readonly type: typeof UPDATE_USER_DATA_ERROR;\r\n    readonly payload: {\r\n        updateUserDataRequest: false,\r\n        updateUserDataSuccess: false\r\n    }\r\n}\r\n\r\nexport interface IRequestLogout {\r\n    readonly type: typeof REQUEST_LOGOUT;\r\n    readonly payload: {\r\n        logoutRequest: true\r\n    }\r\n}\r\n\r\nexport interface IRequestLogoutSuccess {\r\n    readonly type: typeof REQUEST_LOGOUT_SUCCES;\r\n    readonly payload: {\r\n        isAuthorised: false,\r\n        logoutRequest: false,\r\n        logoutSuccess: true\r\n    }\r\n}\r\n\r\nexport interface IRequestLogoutError {\r\n    readonly type: typeof REQUEST_LOGOUT_ERROR;\r\n    readonly payload: {\r\n        logoutRequest: false,\r\n        logoutSuccess: false\r\n    }\r\n}\r\n\r\nexport type TAuthActions = IRegistrationRequest | IRegistrationSuccess | IRegistrationError | ILoginRequest |\r\nILoginSuccess | ILoginError | IForgotPassword | IForgotPasswordSuccess | IForgotPasswordError | IRequestNewPassword |\r\nIResetPasswordSuccess | IResetPasswordError | ISetAuthorised | ISetUnAuthorised | IGetUserData | IGetUserDataSuccess |\r\nIGetUserDataError | IUpdateUserData | IUpdateUserDataSuccess | IUpdateUserDataError | IRequestLogout |\r\nIRequestLogoutSuccess | IRequestLogoutError;\r\n\r\nexport const requestRegistration = (formData : {\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}) => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: REGISTRATION_REQUEST,\r\n            payload: {\r\n                registrationRequest: true\r\n            }\r\n        })\r\n\r\n        let response: any = await userAPI.register(formData);\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: REGISTRATION_SUCCESS,\r\n                payload: {\r\n                    isAuthorised: true,\r\n                    userInfo: response.user,\r\n                    registrationRequest: false,\r\n                    registrationSuccess: true\r\n                }\r\n            });\r\n            let authToken = response.accessToken.split('Bearer ')[1];\r\n            if (authToken) {\r\n                setCookie('token', authToken, {\r\n                    expires: 1200\r\n                });\r\n            }\r\n            localStorage.setItem('refreshToken', response.refreshToken);\r\n        } else {\r\n            dispatch({\r\n                type: REGISTRATION_ERROR,\r\n                payload: {\r\n                    registrationRequest: false,\r\n                    registrationSuccess: false\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const requestLogin = (formData : {\r\n    email: string,\r\n    password: string\r\n}) => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_REQUEST,\r\n            payload: {\r\n                loginRequest: true\r\n            }\r\n        })\r\n\r\n        let response: any = await userAPI.login(formData);\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: {\r\n                    isAuthorised: true,\r\n                    userInfo: response.user,\r\n                    loginRequest: false,\r\n                    loginSuccess: true\r\n                }\r\n            });\r\n            let authToken = response.accessToken.split('Bearer ')[1];\r\n            if (authToken) {\r\n                setCookie('token', authToken, {\r\n                    expires: 1200\r\n                });\r\n            }\r\n            localStorage.setItem('refreshToken', response.refreshToken);\r\n        } else {\r\n            dispatch({\r\n                type: LOGIN_ERROR,\r\n                payload: {\r\n                    loginRequest: false,\r\n                    loginSuccess: false\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n\r\nexport const requestNewPassword = (formData : {\r\n    email: string\r\n}) => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD,\r\n            payload: {\r\n                forgotPasswordRequest: true,\r\n            }\r\n        })\r\n\r\n        let response: any = await userAPI.requestPasswordReset(formData);\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: FORGOT_PASSWORD_SUCCESS,\r\n                payload: {\r\n                    forgotPasswordSuccess: true,\r\n                    forgotPasswordRequest: false,\r\n                    isResetPaswordRequested: true\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FORGOT_PASSWORD_ERROR,\r\n                payload: {\r\n                    forgotPasswordRequest: false,\r\n                    forgotPasswordSuccess: false\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const resetPassword = (formData : {\r\n    password: string,\r\n    token: string\r\n}) => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: REQUEST_NEW_PASSWORD,\r\n            payload: {\r\n                resetPasswordRequest: true,\r\n            }\r\n        })\r\n\r\n        let response: any = await userAPI.resetPassword(formData);\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: RESET_PASSWORD_SUCCESS,\r\n                payload: {\r\n                    resetPasswordRequest: false,\r\n                    resetPasswordSuccess: true,\r\n                    isResetPaswordRequested:false\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: RESET_PASSWORD_ERROR,\r\n                payload: {\r\n                    resetPasswordRequest: false,\r\n                    resetPasswordSuccess: false,\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n\r\nexport const getUserData = () => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: GET_USER_DATA,\r\n            payload: {\r\n                getUserDataRequest: true,\r\n            }\r\n        })\r\n\r\n        if (!getCookie('token')) {\r\n            let newTokenResponse: any = await userAPI.updateToken()\r\n            if (newTokenResponse && newTokenResponse.success) {\r\n                let authToken = newTokenResponse.accessToken.split('Bearer ')[1];\r\n                if (authToken) {\r\n                    setCookie('token', authToken, {\r\n                        expires: 1200\r\n                    });\r\n                }\r\n                localStorage.setItem('refreshToken', newTokenResponse.refreshToken);\r\n            } else {\r\n                console.log('update token error')\r\n            }\r\n        }\r\n\r\n        let response: any = await userAPI.getUserData();\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: GET_USER_DATA_SUCCES,\r\n                payload: {\r\n                    getUserDataRequest: false,\r\n                    getUserDataSuccess: true,\r\n                    userInfo: response.user\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: GET_USER_DATA_ERROR,\r\n                payload: {\r\n                    getUserDataRequest: false,\r\n                    getUserDataSuccess: false,\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n\r\nexport const updateUserData = (formData: {\r\n    name?: string,\r\n    email?: string,\r\n    password?: string\r\n}) => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_USER_DATA,\r\n            payload: {\r\n                updateUserDataRequest: true,\r\n            }\r\n        })\r\n\r\n        if (!getCookie('token')) {\r\n            let newTokenResponse: any = await userAPI.updateToken()\r\n            if (newTokenResponse && newTokenResponse.success) {\r\n                let authToken = newTokenResponse.accessToken.split('Bearer ')[1];\r\n                if (authToken) {\r\n                    setCookie('token', authToken, {\r\n                        expires: 1200\r\n                    });\r\n                }\r\n                localStorage.setItem('refreshToken', newTokenResponse.refreshToken);\r\n            } else {\r\n                console.log('update token error')\r\n            }\r\n        }\r\n\r\n        let response: any = await userAPI.patchUserData(formData);\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: UPDATE_USER_DATA_SUCCES,\r\n                payload: {\r\n                    updateUserDataRequest: false,\r\n                    updateUserDataSuccess: true,\r\n                    userInfo: response.user\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: UPDATE_USER_DATA_ERROR,\r\n                payload: {\r\n                    updateUserDataRequest: false,\r\n                    updateUserDataSuccess: false,\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n\r\nexport const userLogout = () => async (dispatch: AppDispatch) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: REQUEST_LOGOUT,\r\n            payload: {\r\n                logoutRequest: true,\r\n            }\r\n        })\r\n\r\n        let response: any = await userAPI.logout();\r\n        if (response && response.success) {\r\n            localStorage.removeItem('refreshToken')\r\n            dispatch({\r\n                type: REQUEST_LOGOUT_SUCCES,\r\n                payload: {\r\n                    isAuthorised: false,\r\n                    logoutRequest: false,\r\n                    logoutSuccess: true,\r\n                }\r\n            })\r\n\r\n        } else {\r\n            dispatch({\r\n                type: REQUEST_LOGOUT_ERROR,\r\n                payload: {\r\n                    logoutRequest: false,\r\n                    logoutSuccess: false,\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './app-header.module.scss'\r\nimport { Logo, BurgerIcon, ProfileIcon, ListIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useDispatch} from '../../services/hooks'\r\nimport { SET_AUTHORISED, SET_NO_AUTHORISED } from '../../services/actions/auth'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst AppHeader: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const location = useLocation()\r\n\r\n    useEffect( () => {\r\n        if (localStorage.getItem('refreshToken')) {\r\n            dispatch({\r\n                type: SET_AUTHORISED,\r\n                payload: {\r\n                    isAuthorised: true\r\n                }\r\n            })\r\n        } else {\r\n            dispatch({\r\n                type: SET_NO_AUTHORISED,\r\n                payload: {\r\n                    isAuthorised: false\r\n                }\r\n            })\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <header className={`${styles.header} p-4`} >\r\n        <nav className={`${styles.nav} container`} >\r\n\r\n        <NavLink to={'/'} className={`${styles.navItem} p-5 text text_type_main-default`} activeClassName={location.pathname !== \"/\" ? undefined : styles.active}>  <BurgerIcon type={location.pathname !== \"/\" ? \"secondary\" : \"primary\"} /> <span className=\"pl-2\">Конструктор</span></NavLink>\r\n        <NavLink to={'/feed'} className={`${styles.navItem} p-5 ml-2 text text_type_main-default`} activeClassName={styles.active} >  <ListIcon type={location.pathname.indexOf('/feed') !== -1 ? \"primary\" : \"secondary\"} /> <span className=\"pl-2\">Лента заказов</span></NavLink>\r\n\r\n        <div className={styles.logo}>\r\n            <NavLink to ={'/'}>\r\n                <Logo />\r\n            </NavLink>\r\n        </div>\r\n\r\n        <NavLink to={'/profile'} className={`${styles.navItem} p-5 text text_type_main-default`} activeClassName={styles.active} >  <ProfileIcon type={location.pathname.indexOf('/profile') !== -1 ? \"primary\" : \"secondary\"} /> <span className=\"pl-2\">Личный кабинет</span></NavLink>\r\n\r\n        </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport styles from './burger-ingredients.module.scss'\r\nimport { IngredientsSwitcher } from './'\r\nimport { IngredientsBox } from './'\r\n\r\n\r\nconst BurgerIngredients = () => {\r\n    return (\r\n        <section className={styles.section}>\r\n            <h1 className=\"text text_type_main-large mt-10  mb-5\">Соберите бургер</h1>\r\n                <IngredientsSwitcher />\r\n                <IngredientsBox />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default BurgerIngredients;\r\n","import React from 'react';\r\nimport styles from './ingredient-details.module.scss'\r\nimport { useSelector } from '../../services/hooks';\r\n\r\nconst IngredientDetails: React.FC = () => {\r\n\r\n    const {modalData} = useSelector( store => store.burgerIngredients)\r\n\r\n    return (\r\n        <div className={styles.ingredientBox}>\r\n\r\n            <img src={modalData?.image_large} alt={modalData?.name} className={styles.ingredientImg} />\r\n\r\n            <p className=\"text text_type_main-medium pt-4 pb-8\">\r\n                {modalData?.name}\r\n            </p>\r\n\r\n            <div className={styles.ingredientInfo}>\r\n\r\n                <div className={styles.ingredientInfo__item}>\r\n                    <span className={styles.ingredientInfo__name}>\r\n                        <p className=\"text text_type_main-default\">\r\n                            Калории,ккал\r\n                        </p>\r\n                    </span>\r\n                    <span className={styles.ingredientInfo__value}>\r\n                        <p className=\"text text_type_digits-default\">{modalData?.calories}</p>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={styles.ingredientInfo__item}>\r\n                    <span className={styles.ingredientInfo__name}>\r\n                        <p className=\"text text_type_main-default\">\r\n                            Белки, г\r\n                        </p>\r\n                    </span>\r\n                    <span className={styles.ingredientInfo__value}>\r\n                        <p className=\"text text_type_digits-default\">{modalData?.proteins}</p>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={styles.ingredientInfo__item}>\r\n                    <span className={styles.ingredientInfo__name}>\r\n                        <p className=\"text text_type_main-default\">\r\n                            Жиры, г\r\n                        </p>\r\n                    </span>\r\n                    <span className={styles.ingredientInfo__value}>\r\n                        <p className=\"text text_type_digits-default\">{modalData?.fat}</p>\r\n                    </span>\r\n                </div>\r\n\r\n                <div className={styles.ingredientInfo__item}>\r\n                    <span className={styles.ingredientInfo__name}>\r\n                        <p className=\"text text_type_main-default\">\r\n                            Углеводы, г\r\n                        </p>\r\n                    </span>\r\n                    <span className={styles.ingredientInfo__value}>\r\n                        <p className=\"text text_type_digits-default\">{modalData?.carbohydrates}</p>\r\n                    </span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )}\r\n\r\nexport default IngredientDetails;\r\n","import React from 'react';\r\nimport { useDrag } from \"react-dnd\";\r\nimport styles from './ingredient.module.scss'\r\nimport { CurrencyIcon, Counter } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { TIngredient } from '../../../services/types/data'\r\n\r\ntype TProps = {\r\n    data: TIngredient;\r\n    handleModalOpen: (item:TIngredient) => void;\r\n}\r\n\r\nconst Ingredient: React.FC<TProps> = ({data, handleModalOpen}) => {\r\n\r\n    const [{isDrag}, dragRef] = useDrag({\r\n        type: \"ingredient\",\r\n        item: {_id: data._id},\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    return ( <>\r\n        {!isDrag && (\r\n            <div className={`${styles.ingredient} mb-8`}\r\n            onClick={() => handleModalOpen(data)} ref={dragRef}>\r\n            { data.__v !== 0 && <div className={styles.ingredient__counter}>\r\n            <Counter count={data.__v} size=\"default\" />\r\n            </div>}\r\n            <img src={data.image} alt={data.name} className=\"pl-4 pr-4\"/>\r\n            <div className={`${styles.ingredient__price} text text_type_digits-default pt-1 pb-2`} >\r\n            <span className=\"pr-1\">{data.price}</span> <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <span className={`${styles.ingredient__title} text text_type_main-default`}>\r\n            {data.name}\r\n            </span>\r\n            </div>\r\n        )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ingredient;\r\n","import React from 'react'\r\nimport styles from './ingredients-section.module.scss'\r\nimport Ingredient from './ingredient'\r\nimport { TIngredient } from '../../../services/types/data'\r\n\r\ntype TProps = {\r\n    ingredients: TIngredient[];\r\n    handleModalOpen: (item:TIngredient) => void;\r\n    header: string;\r\n}\r\n\r\nconst IngredientsSection = React.forwardRef<HTMLDivElement, TProps>( (props, ref) => {\r\n\r\n    const {ingredients, handleModalOpen, header} = props;\r\n\r\n    return  (\r\n        <div className={`${styles.section} pb-2`} ref={ref}>\r\n            <h2 className={`${styles.section__title} text text_type_main-medium pb-6`} >{header}</h2>\r\n            <div className={`${styles.section__flex} pl-4 pr-2`}>\r\n                {ingredients.map( i => {\r\n                    return ( <Ingredient data={i} handleModalOpen={handleModalOpen} key={i._id}/>)}) }\r\n    </div>\r\n</div>\r\n)\r\n})\r\n\r\nexport default IngredientsSection;\r\n","export default __webpack_public_path__ + \"static/media/spinner.e9df1df7.gif\";","import React from 'react';\r\nimport styles from './preloader.module.scss'\r\nimport preloaderIcon from '../../images/spinner.gif'\r\n\r\nconst Preloader: React.FC = () => {\r\n    return (\r\n        <div className={`${styles.preloader} container`}>\r\n            <img src={preloaderIcon} alt={'Data fetching in progress'} />\r\n\r\n            <p className={`${styles.preloader_description} text text_type_main-medium`}>\r\n                Fetching data, please wait...\r\n            </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;\r\n","import { ingredientsAPI } from '../../api/api'\r\nimport { TIngredient } from '../types/data'\r\nimport { AppDispatch } from '../types/index'\r\n\r\nexport const INGREDIENTS_REQUEST = 'ingredientsReducer/INGREDIENTS_REQUEST' as const;\r\nexport const INGREDIENTS_SUCCESS = 'ingredientsReducer/INGREDIENTS_SUCCESS' as const;\r\nexport const INGREDIENTS_ERROR = 'ingredientsReducer/IINGREDIENTS_ERROR' as const;\r\n\r\nexport const SET_MODAL_DATA = 'ingredientsReducer/SET_MODAL_DATA' as const;\r\nexport const REMOVE_MODAL_DATA = 'ingredientsReducer/REMOVE_MODAL_DATA' as const;\r\n\r\nexport const SET_CURRENT_TAB = 'ingredientsReducer/SET_CURRENT_TAB' as const;\r\n\r\nexport const INCREASE_ITEM_COUNTER = 'ingredientsReducer/INCREASE_ITEM_COUNTER' as const;\r\nexport const DECREASE_ITEM_COUNTER = 'ingredientsReducer/DECREASE_ITEM_COUNTER' as const;\r\n\r\nexport const CLEAR_ITEMS_COUNTER = 'ingredientsReducer/CLEAR_ITEMS_COUNTER' as const;\r\n\r\nexport interface IIngredientsRequest {\r\n    readonly type: typeof INGREDIENTS_REQUEST\r\n    readonly payload: {\r\n        ingredientsRequest: true\r\n    }\r\n}\r\n\r\nexport interface IIngredientsSuccess {\r\n    readonly type: typeof INGREDIENTS_SUCCESS\r\n    readonly payload: {\r\n        ingredients: TIngredient[],\r\n        ingredientsRequest: false,\r\n        ingredientsSuccess:true\r\n    }\r\n}\r\n\r\nexport interface IIngredientsError {\r\n    readonly type: typeof INGREDIENTS_ERROR\r\n    readonly payload: {\r\n        ingredients: [],\r\n        ingredientsRequest: false,\r\n        ingredientsSuccess:false,\r\n        error: string\r\n    }\r\n}\r\n\r\nexport interface ISetModalData {\r\n    readonly type: typeof SET_MODAL_DATA\r\n    readonly payload: {\r\n        modalData: TIngredient\r\n    }\r\n}\r\n\r\nexport interface IRemoveModalData {\r\n    readonly type: typeof REMOVE_MODAL_DATA\r\n}\r\n\r\nexport interface ISetCurrentTab {\r\n    readonly type: typeof SET_CURRENT_TAB\r\n    readonly payload: {\r\n        currentTab: 'buns' | 'sauces' | 'mains'\r\n    }\r\n}\r\n\r\nexport interface IIncreaseItemCounter {\r\n    readonly type: typeof INCREASE_ITEM_COUNTER\r\n    readonly id: string\r\n}\r\n\r\nexport interface IDecreaseItemCounter {\r\n    readonly type: typeof DECREASE_ITEM_COUNTER\r\n    readonly id: string\r\n}\r\n\r\nexport interface IClearItemsCounter {\r\n    readonly type: typeof CLEAR_ITEMS_COUNTER\r\n}\r\n\r\nexport type TIngredientsActions = IIngredientsRequest | IIngredientsSuccess | IIngredientsError | ISetModalData |\r\nIRemoveModalData | ISetCurrentTab | IIncreaseItemCounter | IDecreaseItemCounter | IClearItemsCounter\r\n\r\nexport const requestIngredients = () => async (dispatch: AppDispatch) => {\r\n\r\n    try{\r\n        dispatch({\r\n            type: INGREDIENTS_REQUEST,\r\n            payload: {\r\n                ingredientsRequest: true\r\n            }\r\n        })\r\n\r\n        let response: any = await ingredientsAPI.requestIngredients();\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: INGREDIENTS_SUCCESS,\r\n                payload: {\r\n                    ingredients: response.data,\r\n                    ingredientsRequest: false,\r\n                    ingredientsSuccess:true\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: INGREDIENTS_ERROR,\r\n                payload: {\r\n                    ingredients: [],\r\n                    ingredientsRequest: false,\r\n                    ingredientsSuccess:false,\r\n                    error: response.error\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n","export const TOGGLE_IS_FETCHING = 'appReducer/TOGGLE_IS_FETCHING' as const;\r\nexport const MODAL_OPEN = 'appReducer/MODAL_OPEN' as const;\r\nexport const MODAL_CLOSE = 'appReducer/MODAL_CLOSE' as const;\r\n\r\n\r\n\r\nexport interface IToggleIsFetching {\r\n    readonly type: typeof TOGGLE_IS_FETCHING;\r\n    readonly payload: {\r\n        isFetching: boolean\r\n    }\r\n}\r\n\r\nexport interface IModalOpen {\r\n    readonly type: typeof MODAL_OPEN;\r\n    readonly payload: {\r\n        isModalOpen: true,\r\n        modalType: 'ingredient' | 'order' | 'feedOrder' | 'profileOrder'\r\n    }\r\n}\r\n\r\nexport interface IModalClose {\r\n    readonly type: typeof MODAL_CLOSE;\r\n    readonly payload: {\r\n        isModalOpen: false,\r\n        modalType: null\r\n    }\r\n}\r\n\r\nexport type TAppActions = IToggleIsFetching | IModalOpen | IModalClose;\r\n","import React from 'react';\r\nimport styles from './ingredients-box.module.scss'\r\nimport IngredientsSection from './ingredients-section/ingredients-section'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport Preloader from '../common/preloader'\r\nimport { SET_MODAL_DATA, SET_CURRENT_TAB } from '../../services/actions/ingredients'\r\nimport { MODAL_OPEN } from '../../services/actions/app'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TIngredient } from '../../services/types/data'\r\n\r\nconst IngredientsBox: React.FC = () => {\r\n\r\n    const {ingredients, ingredientsRequest} = useSelector( store => store.burgerIngredients)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const [scrollPosition, setScrollPosition] = React.useState<{buns: number | null, sauces: number | null, mains: number | null}>({\r\n        buns: null,\r\n        sauces: null,\r\n        mains: null\r\n    });\r\n\r\n    let buns: TIngredient[] = []\r\n    let mains: TIngredient[] = []\r\n    let sauces: TIngredient[] = []\r\n\r\n    ingredients.forEach( (i: TIngredient) => {\r\n        switch (i.type) {\r\n            case \"bun\":\r\n            buns.push(i);\r\n            break;\r\n            case \"main\":\r\n            mains.push(i);\r\n            break;\r\n            case \"sauce\":\r\n            sauces.push(i);\r\n            break;\r\n            default:\r\n            break;\r\n        }\r\n    })\r\n\r\n    const handleModalOpen = (item: TIngredient) => {\r\n        dispatch({\r\n            type: MODAL_OPEN,\r\n            payload: {\r\n                isModalOpen: true,\r\n                modalType: 'ingredient'\r\n            }\r\n        })\r\n        dispatch({\r\n            type: SET_MODAL_DATA,\r\n            payload: {\r\n                modalData: item\r\n            }\r\n        })\r\n        history.push('/ingredients/' + item._id)\r\n    }\r\n\r\n    const parentRef = React.useRef<HTMLDivElement>(null);\r\n    const bunsRef = React.useRef<HTMLDivElement>(null);\r\n    const saucesRef = React.useRef<HTMLDivElement>(null);\r\n    const mainsRef = React.useRef<HTMLDivElement>(null);\r\n\r\n\r\n    const handleScroll = (element: React.SyntheticEvent<EventTarget>) => {\r\n\r\n        setScrollPosition({\r\n            buns: bunsRef.current === null ? scrollPosition.buns : bunsRef.current!.offsetTop,\r\n            sauces: saucesRef.current === null ? scrollPosition.sauces : saucesRef.current!.offsetTop,\r\n            mains: mainsRef.current === null ? scrollPosition.mains : mainsRef.current!.offsetTop\r\n        })\r\n\r\n        const target = element.target as Element;\r\n\r\n        const parentScroll = target.scrollTop\r\n\r\n        if (parentScroll < scrollPosition.sauces!) {\r\n            dispatch({\r\n                type: SET_CURRENT_TAB,\r\n                payload: {\r\n                    currentTab: \"buns\"\r\n                }\r\n            })\r\n        }\r\n\r\n        if (parentScroll >= scrollPosition.sauces! && parentScroll < scrollPosition.mains!) {\r\n            dispatch({\r\n                type: SET_CURRENT_TAB,\r\n                payload: {\r\n                    currentTab: \"sauces\"\r\n                }\r\n            })\r\n        }\r\n\r\n        if (parentScroll > scrollPosition.sauces! && parentScroll >= scrollPosition.mains!) {\r\n            dispatch({\r\n                type: SET_CURRENT_TAB,\r\n                payload: {\r\n                    currentTab: \"mains\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return ( <div className={`${styles.ingredientsBox} pt-10`} ref={parentRef} onScroll={ e => handleScroll(e)}>\r\n\r\n        {ingredientsRequest ?\r\n            <Preloader />\r\n            :\r\n            [\r\n                <IngredientsSection ingredients={buns}\r\n                    handleModalOpen={handleModalOpen}\r\n                    header={'Булки'}\r\n                    key={'Булки'}\r\n                    ref={bunsRef}/>,\r\n\r\n                <IngredientsSection\r\n                    ingredients={sauces}\r\n                    handleModalOpen={handleModalOpen}\r\n                    header={'Соусы'}\r\n                    key={'Соусы'}\r\n                    ref={saucesRef}/>,\r\n\r\n                <IngredientsSection\r\n                    ingredients={mains}\r\n                    handleModalOpen={handleModalOpen}\r\n                    header={'Начинки'}\r\n                    key={'Начинки'}\r\n                    ref={mainsRef}/>\r\n            ]\r\n        }\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default IngredientsBox\r\n","import React from 'react';\r\nimport { useSelector} from '../../services/hooks'\r\nimport styles from './ingredients-switcher.module.scss'\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components'\r\n\r\nconst IngredientsSwitcher: React.FC = () => {\r\n\r\n    const {currentTab} = useSelector( store => store.burgerIngredients)\r\n\r\n    return (\r\n        <div className={styles.block}>\r\n            <Tab value=\"one\" active={currentTab === 'buns'} onClick={()=>{}}>\r\n                Булки\r\n            </Tab>\r\n            <Tab value=\"sauces\" active={currentTab === 'sauces'} onClick={()=>{}}>\r\n                Соусы\r\n            </Tab>\r\n            <Tab value=\"mains\" active={currentTab === 'mains'} onClick={()=>{}}>\r\n                Начинки\r\n            </Tab>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IngredientsSwitcher;\r\n","import { TIngredient } from '../types/data'\r\n\r\nexport const ADD_INGREDIENT = 'constructorReducer/ADD_INGREDIENT' as const;\r\nexport const DELETE_INGREDIENT = 'constructorReducer/DELETE_INGREDIENT' as const;\r\nexport const REPLACE_ITEMS = 'constructorReducer/REPLACE_ITEMS' as const;\r\nexport const CLEAR_CONSTRUCTOR = 'constructorReducer/CLEAR_CONSTRUCTOR' as const;\r\n\r\nexport interface IAddIngredient {\r\n    readonly type: typeof ADD_INGREDIENT;\r\n    readonly item: TIngredient\r\n}\r\n\r\nexport interface IDeleteIngredient {\r\n    readonly type: typeof DELETE_INGREDIENT;\r\n    readonly hash: string\r\n}\r\n\r\nexport interface IReplaceIngredient {\r\n    readonly type: typeof REPLACE_ITEMS;\r\n    readonly payload: {\r\n        dragIndex: number,\r\n        hoverIndex: number\r\n    }\r\n}\r\n\r\nexport interface IClearConstructor {\r\n    readonly type: typeof CLEAR_CONSTRUCTOR;\r\n}\r\n\r\nexport type TConstructorActions = IAddIngredient | IDeleteIngredient | IReplaceIngredient | IClearConstructor\r\n","export default __webpack_public_path__ + \"static/media/order-icon.7341dd32.svg\";","import { ordersAPI, userAPI } from '../../api/api'\r\nimport succesOrderIcon from '../../images/order-icon.svg'\r\nimport { getCookie, setCookie } from '../../utils/cookie'\r\nimport { TIngredient, TOrder } from '../types/data'\r\nimport { AppDispatch } from '../types/index'\r\n\r\nexport const CALCULATE_ORDER_PRICE = 'orderReducer/CALCULATE_ORDER_PRICE' as const;\r\n\r\nexport const ORDER_DATA_REQUEST = 'orderReducer/ORDER_DATA_REQUEST' as const;\r\nexport const ORDER_DATA_SUCCESS = 'orderReducer/ORDER_DATA_SUCCESS' as const;\r\nexport const ORDER_DATA_ERROR = 'orderReducer/ORDER_DATA_ERROR' as const;\r\n\r\nexport const ORDER_DATA_RESET = 'orderReducer/ORDER_DATA_RESET' as const;\r\n\r\nexport const ORDERS_LIST_DATA_REQUEST = 'orderReducer/ORDERS_LIST_DATA_REQUEST' as const;\r\nexport const ORDERS_LIST_DATA_SUCCESS = 'orderReducer/ORDERS_LIST_DATA_SUCCESS' as const;\r\nexport const ORDERS_LIST_DATA_ERROR = 'orderReducer/ORDERS_LIST_DATA_ERROR' as const;\r\n\r\nexport interface ICalculateOrderPrice {\r\n    readonly type: typeof CALCULATE_ORDER_PRICE;\r\n    readonly bun: TIngredient | null;\r\n    readonly ingredients: TIngredient[] | []\r\n}\r\n\r\nexport interface IOrderDataRequest {\r\n    readonly type: typeof ORDER_DATA_REQUEST;\r\n    readonly payload: {\r\n            orderDataRequest: true\r\n    }\r\n}\r\n\r\nexport interface IOrderDataSuccess {\r\n    readonly type: typeof ORDER_DATA_SUCCESS;\r\n    readonly payload: {\r\n        orderData: {\r\n            orderID: string,\r\n            statusIcon: string,\r\n            orderStatus: \"Ваш заказ начали готовить\",\r\n            orderDescription: \"Дождитесь готовности на орбитальной станции\"\r\n        },\r\n        orderDataRequest: false,\r\n        orderDataSuccess:true\r\n    }\r\n}\r\n\r\nexport interface IOrderDataError {\r\n    readonly type: typeof ORDER_DATA_ERROR;\r\n    readonly payload: {\r\n        orderData: {\r\n            orderID: null,\r\n            statusIcon: null,\r\n            orderStatus: null,\r\n            orderDescription: null\r\n        },\r\n        orderDataRequest: false,\r\n        orderDataSuccess:false,\r\n        error: string\r\n    }\r\n}\r\n\r\nexport interface IOrderDataReset {\r\n    readonly type: typeof ORDER_DATA_RESET;\r\n}\r\n\r\nexport interface IOrdersListDataRequest {\r\n    readonly type: typeof ORDERS_LIST_DATA_REQUEST;\r\n    readonly payload: {\r\n        ordersListRequest: true,\r\n        ordersListSuccess: null\r\n    }\r\n}\r\n\r\nexport interface IOrdersListDataSuccess {\r\n    readonly type: typeof ORDERS_LIST_DATA_SUCCESS;\r\n    readonly payload: {\r\n        ordersList: TOrder[],\r\n        ordersListRequest: false,\r\n        ordersListSuccess: true,\r\n    }\r\n}\r\n\r\nexport interface IOrdersListDataError {\r\n    readonly type: typeof ORDERS_LIST_DATA_ERROR;\r\n    readonly payload: {\r\n        ordersListRequest: false,\r\n        ordersListSuccess: false,\r\n        error: string\r\n    }\r\n}\r\n\r\nexport type TOrderActions = ICalculateOrderPrice | IOrderDataRequest | IOrderDataSuccess | IOrderDataError |\r\nIOrderDataReset | IOrdersListDataRequest | IOrdersListDataSuccess | IOrdersListDataError\r\n\r\nexport const requestOrderData = (ingredientIDs: string[]) => async (dispatch: AppDispatch) => {\r\n\r\n    try{\r\n        dispatch({\r\n            type: ORDER_DATA_REQUEST,\r\n            payload: {\r\n                orderDataRequest: true\r\n            }\r\n        })\r\n\r\n        if (!getCookie('token')) {\r\n            let newTokenResponse: any = await userAPI.updateToken()\r\n            if (newTokenResponse && newTokenResponse.success) {\r\n                let authToken = newTokenResponse.accessToken.split('Bearer ')[1];\r\n                if (authToken) {\r\n                    setCookie('token', authToken, {\r\n                        expires: 1200\r\n                    });\r\n                }\r\n                localStorage.setItem('refreshToken', newTokenResponse.refreshToken);\r\n            } else {\r\n                console.log('update token error')\r\n            }\r\n        }\r\n\r\n        let response: any = await ordersAPI.postOrder(ingredientIDs);\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: ORDER_DATA_SUCCESS,\r\n                payload: {\r\n                    orderData: {\r\n                        orderID: response.order.number,\r\n                        statusIcon: succesOrderIcon,\r\n                        orderStatus: \"Ваш заказ начали готовить\",\r\n                        orderDescription: \"Дождитесь готовности на орбитальной станции\"\r\n                    },\r\n                    orderDataRequest: false,\r\n                    orderDataSuccess:true\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: ORDER_DATA_ERROR,\r\n                payload: {\r\n                    orderData: {\r\n                        orderID: null,\r\n                        statusIcon: null,\r\n                        orderStatus: null,\r\n                        orderDescription: null\r\n                    },\r\n                    orderDataRequest: false,\r\n                    orderDataSuccess:false,\r\n                    error: response.error\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n\r\nexport const requestAllOrders = () => async (dispatch: AppDispatch) => {\r\n\r\n    try{\r\n        dispatch({\r\n            type: ORDERS_LIST_DATA_REQUEST,\r\n            payload: {\r\n                ordersListRequest: true,\r\n                ordersListSuccess: null\r\n            }\r\n        })\r\n\r\n        if (!getCookie('token')) {\r\n            let newTokenResponse: any = await userAPI.updateToken()\r\n            if (newTokenResponse && newTokenResponse.success) {\r\n                let authToken = newTokenResponse.accessToken.split('Bearer ')[1];\r\n                if (authToken) {\r\n                    setCookie('token', authToken, {\r\n                        expires: 1200\r\n                    });\r\n                }\r\n                localStorage.setItem('refreshToken', newTokenResponse.refreshToken);\r\n            } else {\r\n                console.log('update token error')\r\n            }\r\n        }\r\n\r\n        let response: any = await ordersAPI.getALLOrders();\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: ORDERS_LIST_DATA_SUCCESS,\r\n                payload: {\r\n                    ordersList: response.orders,\r\n                    ordersListRequest: false,\r\n                    ordersListSuccess: true,\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: ORDERS_LIST_DATA_ERROR,\r\n                payload: {\r\n                    ordersListRequest: false,\r\n                    ordersListSuccess: false,\r\n                    error: response.error\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n\r\nexport const requestUserOrders = () => async (dispatch: AppDispatch) => {\r\n\r\n    try{\r\n        dispatch({\r\n            type: ORDERS_LIST_DATA_REQUEST,\r\n            payload: {\r\n                ordersListRequest: true,\r\n                ordersListSuccess: null\r\n            }\r\n        })\r\n\r\n        if (!getCookie('token')) {\r\n            let newTokenResponse: any = await userAPI.updateToken()\r\n            if (newTokenResponse && newTokenResponse.success) {\r\n                let authToken = newTokenResponse.accessToken.split('Bearer ')[1];\r\n                if (authToken) {\r\n                    setCookie('token', authToken, {\r\n                        expires: 1200\r\n                    });\r\n                }\r\n                localStorage.setItem('refreshToken', newTokenResponse.refreshToken);\r\n            } else {\r\n                console.log('update token error')\r\n            }\r\n        }\r\n\r\n        let response: any = await ordersAPI.getUserOrders();\r\n        if (response && response.success) {\r\n            dispatch({\r\n                type: ORDERS_LIST_DATA_SUCCESS,\r\n                payload: {\r\n                    ordersList: response.orders,\r\n                    ordersListRequest: false,\r\n                    ordersListSuccess: true,\r\n                }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: ORDERS_LIST_DATA_ERROR,\r\n                payload: {\r\n                    ordersListRequest: false,\r\n                    ordersListSuccess: false,\r\n                    error: response.error\r\n                }\r\n            });\r\n        }\r\n    } catch (e) {\r\n        console.error(e)\r\n    }\r\n\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {useSelector, useDispatch} from '../../services/hooks';\r\nimport { useDrop } from \"react-dnd\";\r\nimport styles from './burger-constructor.module.scss';\r\nimport { ConstructorIngredients } from './';\r\nimport { ConstructorTotalPrice } from './'\r\nimport { INCREASE_ITEM_COUNTER } from '../../services/actions/ingredients'\r\nimport { ADD_INGREDIENT } from '../../services/actions/constructor'\r\nimport { CALCULATE_ORDER_PRICE } from '../../services/actions/order'\r\nimport { TIngredient } from '../../services/types/data'\r\n\r\n\r\nconst BurgerConstructor: React.FC = () => {\r\n\r\n    const { ingredients, bun } = useSelector( store => store.burgerConstructor)\r\n    const  ingredientsData = useSelector( store => store.burgerIngredients.ingredients)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const isHasBun = bun !== null;\r\n\r\n    const [{isHover}, dropTarget] = useDrop({\r\n        accept: \"ingredient\",\r\n        drop(itemId: TIngredient) {\r\n            onDropHandler(itemId);\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    });\r\n\r\n    const onDropHandler = (item: TIngredient) => {\r\n        let element = ingredientsData.find( (i: TIngredient) => i._id === item._id)\r\n        element!.hash = item._id + Math.floor(Math.random() * 100)\r\n        dispatch({\r\n            type: ADD_INGREDIENT,\r\n            item: element\r\n        })\r\n        dispatch({\r\n            type: INCREASE_ITEM_COUNTER,\r\n            id: item._id\r\n        })\r\n    }\r\n\r\n    useEffect( () => {\r\n        dispatch({\r\n            type: CALCULATE_ORDER_PRICE,\r\n            bun,\r\n            ingredients\r\n        })\r\n    }, [dispatch, ingredients, bun])\r\n\r\n    return (\r\n        <section className={`${styles.section} pt-25 pl-4 pr-4`}>\r\n\r\n            <div ref={dropTarget}\r\n            className={`${styles.dropbox} ${isHover && styles.dropHover} ${!isHasBun && styles.placeholder}`}>\r\n\r\n                { !isHasBun &&\r\n                    <p className=\"text text_type_main-default\">\r\n                        Пожалуйста, перетащите сюда тип предпочитаемой булки\r\n                    </p> }\r\n\r\n                { isHasBun && <ConstructorIngredients ingredients={ingredients} bun={bun!} /> }\r\n\r\n            </div>\r\n\r\n            { isHasBun && <ConstructorTotalPrice ingredients={ingredients} bun={bun!}/> }\r\n\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default BurgerConstructor;\r\n","import React from 'react';\r\nimport './constructor-ingredients.scss'\r\nimport { ConstructorElement } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { DraggableElement } from './'\r\nimport { TIngredient } from '../../services/types/data'\r\n\r\ntype TProps = {\r\n    bun: TIngredient;\r\n    ingredients: TIngredient[]\r\n}\r\n\r\nconst ConstructorIngredients: React.FC<TProps> = props => {\r\n\r\n    return (\r\n        <div className=\"constructorElement__box\" >\r\n\r\n            <div className=\"constructorElement__item pl-8\" >\r\n                <ConstructorElement\r\n                    type=\"top\"\r\n                    isLocked={true}\r\n                    text={`${props.bun.name} (верх)`}\r\n                    price={props.bun.price}\r\n                    thumbnail={props.bun.image_mobile}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"constructorElement__scrollable\" >\r\n                {props.ingredients.map( (i, index) => {\r\n                    return (<DraggableElement {...i} index={index} key={i.hash}/>)\r\n                })}\r\n            </div>\r\n\r\n            <div className=\"constructorElement__item pl-8\" >\r\n                <ConstructorElement\r\n                    type=\"bottom\"\r\n                    isLocked={true}\r\n                    text={`${props.bun.name} (низ)`}\r\n                    price={props.bun.price}\r\n                    thumbnail={props.bun.image_mobile}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ConstructorIngredients;\r\n","import React from 'react';\r\nimport styles from './modal-overlay.module.scss'\r\n\r\ntype TProps = {\r\n    readonly onClose: () => void\r\n};\r\n\r\nconst ModalOverlay: React.FC<TProps> = (props) => {\r\n\r\n    function handleModalClose(e:  React.SyntheticEvent<EventTarget> ) {\r\n        e.stopPropagation();\r\n        props.onClose()\r\n    }\r\n\r\n    return (\r\n        <div className={styles.overlay} onClick={handleModalClose} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import React from 'react';\r\nimport styles from './modal.module.scss'\r\nimport ReactDOM from 'react-dom'\r\nimport ModalOverlay from './modal-overlay/modal-overlay'\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { MODAL_CLOSE } from '../../services/actions/app'\r\nimport { ORDER_DATA_RESET } from '../../services/actions/order'\r\nimport {CLEAR_ITEMS_COUNTER, REMOVE_MODAL_DATA} from '../../services/actions/ingredients'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {CLEAR_CONSTRUCTOR} from \"../../services/actions/constructor\";\r\n\r\nconst modalRoot : HTMLElement | null = document.getElementById('modal')!;\r\n\r\ntype TProps = {\r\n    readonly header?: string | undefined;\r\n    readonly children: React.ReactElement;\r\n};\r\n\r\nconst Modal: React.FC<TProps> = (props) => {\r\n\r\n    const { modalType } = useSelector( store => store.app)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const handleStopPropagation = (e : React.SyntheticEvent<EventTarget> ) => {\r\n        e.stopPropagation();\r\n    }\r\n\r\n    const escFunction = (e : KeyboardEvent) : void => {\r\n        if(e.keyCode === 27) {\r\n            handleModalClose()\r\n        }\r\n    }\r\n\r\n    React.useEffect( () => {\r\n        document.addEventListener(\"keydown\", escFunction);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", escFunction)\r\n        }\r\n    } )\r\n\r\n    const handleModalClose = () => {\r\n        dispatch({\r\n            type: MODAL_CLOSE,\r\n            payload: {\r\n                isModalOpen:false,\r\n                modalType: null\r\n            }\r\n        })\r\n        modalType === 'ingredient' && dispatch({\r\n            type: REMOVE_MODAL_DATA\r\n        })\r\n        modalType === 'order' && dispatch({\r\n            type: ORDER_DATA_RESET\r\n        })\r\n        modalType === 'order' && dispatch({\r\n            type: CLEAR_CONSTRUCTOR\r\n        })\r\n        modalType === 'order' && dispatch({\r\n            type: CLEAR_ITEMS_COUNTER\r\n        })\r\n        modalType !== 'order' && history.go(-1)\r\n    }\r\n\r\n\r\n    const { children, header} = props;\r\n\r\n    return ReactDOM.createPortal(\r\n\r\n        ( <ModalOverlay onClose={handleModalClose}>\r\n\r\n            <div className={`${styles.modal} pt-10 pr-10 pl-10 pb-15`} onClick={handleStopPropagation}>\r\n                <div className={styles.header}>\r\n                    {header && <p className=\"text text_type_main-large\">{header}</p>}\r\n                    <span className={styles.modalCloseBtn} ><CloseIcon type=\"primary\"  onClick={handleModalClose} /></span>\r\n                </div>\r\n                {children}\r\n            </div>\r\n\r\n        </ModalOverlay>),\r\n        modalRoot\r\n    );\r\n\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {useDispatch, useSelector} from '../../services/hooks';\r\nimport styles from './constructor-total-price.module.scss'\r\nimport Modal from '../modal/modal'\r\nimport { OrderDetails } from './'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { requestOrderData } from '../../services/actions/order'\r\nimport { MODAL_OPEN } from '../../services/actions/app'\r\nimport { TIngredient } from '../../services/types/data'\r\n\r\ntype TProps = {\r\n    bun: TIngredient;\r\n    ingredients: TIngredient[]\r\n}\r\n\r\nconst ConstructorTotalPrice: React.FC<TProps> = ({ingredients, bun}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { price } = useSelector( store => store.order)\r\n    const { isModalOpen, modalType } = useSelector( store => store.app)\r\n    const { isAuthorised } = useSelector( store => store.auth)\r\n\r\n    const handleCreateOrder = () => {\r\n        if ( isAuthorised ) {\r\n            const ingredientsID: string[] = []\r\n            bun && ingredientsID.push(bun._id, bun._id)\r\n            ingredients.forEach(i => {\r\n                ingredientsID.push(i._id)\r\n            })\r\n            dispatch(requestOrderData(ingredientsID))\r\n            dispatch({\r\n                type: MODAL_OPEN,\r\n                payload: {\r\n                    isModalOpen: true,\r\n                    modalType: 'order'\r\n                }\r\n            })\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <div className={`${styles.priceBox} pt-10 pb-10`}>\r\n            <span className=\"text text_type_digits-medium pr-3\">{price}</span>\r\n            <span className={`${styles.priceIcon} pr-10`} ><CurrencyIcon type=\"primary\" /></span>\r\n\r\n            <Button type=\"primary\" size=\"medium\" onClick={handleCreateOrder}>\r\n                Оформить заказ\r\n            </Button>\r\n\r\n        </div>\r\n        {isModalOpen && modalType === 'order' &&\r\n            <Modal>\r\n                <OrderDetails />\r\n            </Modal>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default ConstructorTotalPrice\r\n","import React from 'react'\r\nimport { useDispatch } from '../../services/hooks'\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport './draggable-element.scss'\r\nimport { REPLACE_ITEMS, DELETE_INGREDIENT } from '../../services/actions/constructor'\r\nimport { DECREASE_ITEM_COUNTER } from '../../services/actions/ingredients'\r\n\r\ntype TProps = {\r\n    __v: number;\r\n    _id: string;\r\n    calories: number;\r\n    carbohydrates: number;\r\n    fat: number;\r\n    hash?: string;\r\n    image: string;\r\n    image_large: string;\r\n    image_mobile: string;\r\n    index: number;\r\n    name: string;\r\n    price: number;\r\n    proteins: number;\r\n    type: string;\r\n}\r\n\r\nconst DraggableElement: React.FC<TProps> = (props) => {\r\n    const { _id, name, price, image_mobile, index, hash} = props\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const ref = React.useRef<HTMLDivElement>(null)\r\n\r\n    const [{isDrag}, drag] = useDrag({\r\n        type: \"replaceObj\",\r\n        item: {_id, index},\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    const [{isHover}, drop] = useDrop({\r\n        accept: \"replaceObj\",\r\n        hover: (item: {index: number}, monitor) => {\r\n            if (!ref.current) { return }\r\n            const dragIndex = item.index;\r\n            const hoverindex = index\r\n            if(dragIndex === hoverindex) {\r\n                return\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect()\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n            const clientOffset = monitor.getClientOffset()\r\n            const hoverClientY = clientOffset!.y - hoverBoundingRect.top\r\n\r\n            if(dragIndex < hoverindex && hoverClientY < hoverMiddleY ) {\r\n                return\r\n            }\r\n            if (dragIndex > hoverindex && hoverClientY > hoverMiddleY ) {\r\n                return\r\n            }\r\n            replaceItem(dragIndex, hoverindex)\r\n\r\n            item.index = hoverindex\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    })\r\n\r\n    const replaceItem = (dragIndex: number, hoverIndex: number) => {\r\n        dispatch({\r\n            type: REPLACE_ITEMS,\r\n            payload: {\r\n                dragIndex,\r\n                hoverIndex\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleDeleteItem = () => {\r\n        dispatch({\r\n            type: DELETE_INGREDIENT,\r\n            hash\r\n        })\r\n        dispatch({\r\n            type: DECREASE_ITEM_COUNTER,\r\n            id: _id\r\n        })\r\n    }\r\n\r\n    drag(drop(ref))\r\n\r\n    return ( <div className={`${isDrag && 'draggable'} ${!isDrag && isHover && 'hover'} constructorElement__item`} ref={ref}>\r\n            <button className=\"element__dragicon\">\r\n                <DragIcon type=\"primary\" />\r\n            </button>\r\n\r\n            <ConstructorElement\r\n                text={name}\r\n                price={price}\r\n                thumbnail={image_mobile}\r\n                handleClose={handleDeleteItem}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DraggableElement;\r\n","import React from 'react';\r\nimport {useSelector} from '../../services/hooks';\r\nimport styles from './order-details.module.scss'\r\nimport Preloader from '../../components/common/preloader'\r\n\r\nconst OrderDetails: React.FC = () => {\r\n\r\n    const {orderData, orderDataRequest} = useSelector(store => store.order)\r\n\r\n    return orderDataRequest ? (<Preloader />) : (\r\n            <div className={styles.modalFlex}>\r\n                <p className=\"text text_type_digits-large pt-8 pb-8\">{orderData.orderID}</p>\r\n                <p className=\"text text_type_main-medium pb-15\">\r\n                    идентификатор заказа\r\n                </p>\r\n\r\n                <img src={orderData.statusIcon!} alt=\"Order Icon\" className=\"pb-15\"/>\r\n\r\n                <p className=\"text text_type_main-default\">\r\n                    {orderData.orderStatus}\r\n                </p>\r\n\r\n                <p className={`${styles.secondaryColor} text text_type_main-default pb-15`}>\r\n                    {orderData.orderDescription}\r\n                </p>\r\n\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport styles from './burger-main.module.scss'\r\nimport { BurgerIngredients } from '../burger-ingredients';\r\nimport { BurgerConstructor } from '../burger-constructor';\r\n\r\nconst BurgerMain: React.FC = () => {\r\n\r\n    return(\r\n        <main className={`${styles.BurgerMain} container pl-5 pr-5`}>\r\n            <DndProvider backend={HTML5Backend} >\r\n                <BurgerIngredients />\r\n                <BurgerConstructor />\r\n            </ DndProvider >\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default BurgerMain;\r\n","import React, { useState } from 'react';\r\nimport './forms-styles.scss'\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {Link} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { requestLogin } from '../../services/actions/auth'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\n\r\nconst LoginPage: React.FC = () => {\r\n\r\n    const { isAuthorised, logoutRequest, loginSuccess } =  useSelector( store => store.auth )\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const state : any = history?.location?.state\r\n\r\n    const [loginForm, setLoginForm] = useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setLoginForm({\r\n            ...loginForm,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault()\r\n        dispatch(requestLogin(loginForm))\r\n    }\r\n\r\n    if (loginSuccess && history.action === \"REPLACE\") {\r\n        return <Redirect to={ state.from.pathname || '/' } />\r\n    }\r\n\r\n    return isAuthorised && !logoutRequest ? ( <Redirect to=\"/\" /> ) : (\r\n        <main className=\"form container\">\r\n            <form className=\"form__box\" onSubmit={handleSubmit}>\r\n\r\n                <p className=\"text text_type_main-medium pb-6 form__header\">Вход</p>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        icon={undefined}\r\n                        value={loginForm.email}\r\n                        name={'email'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        onChange={ e => handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <PasswordInput value={loginForm.password} name={'password'} onChange={ e => handleChange(e)} />\r\n                </div>\r\n\r\n                { loginSuccess === false && <span className=\"text text_type_main-default form__errorMessage mt-2 mb-6\" >\r\n                    Упс, что-то пошло не так!\r\n                </span>}\r\n\r\n                <div className=\"form__button\">\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Войти\r\n                    </Button>\r\n                </div>\r\n\r\n                <span className={`form__footerField pt-20 pb-6`}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Вы — новый пользователь?\r\n                    </p>\r\n                    <Link to={'/register'}>Зарегистрироваться</Link>\r\n                </span>\r\n\r\n                <span className={'form__footerField'}>\r\n                <p className=\"text text_type_main-default\">\r\n                    Забыли пароль?\r\n                </p>\r\n                <Link to={'/forgot-password'}>Восстановить пароль</Link>\r\n                </span>\r\n\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, {useState} from 'react';\r\nimport './forms-styles.scss'\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {Link} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { requestRegistration } from '../../services/actions/auth'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst RegisterPage: React.FC = () => {\r\n\r\n    const { isAuthorised, registrationSuccess } =  useSelector( store => store.auth )\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [registerForm, setRegisterForm] = useState({\r\n        name: '',\r\n        email:'',\r\n        password: ''\r\n    })\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRegisterForm({\r\n            ...registerForm,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault()\r\n        dispatch(requestRegistration(registerForm))\r\n    }\r\n\r\n    return isAuthorised\r\n    ? (<Redirect to=\"/\" />)\r\n    :(\r\n        <main className=\"form container\">\r\n            <form className=\"form__box\" onSubmit={handleSubmit}>\r\n\r\n                <p className=\"text text_type_main-medium pb-6 form__header\">Регистрация</p>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Имя'}\r\n                        icon={undefined}\r\n                        value={registerForm.name}\r\n                        name={'name'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        onChange={ e => handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'E-mail'}\r\n                        icon={undefined}\r\n                        value={registerForm.email}\r\n                        name={'email'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        onChange={ e => handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <PasswordInput value={registerForm.password} name={'password'} onChange={ e => handleChange(e)} />\r\n                </div>\r\n\r\n                { registrationSuccess === false && <span className=\"text text_type_main-default form__errorMessage mt-2 mb-6\" >\r\n                    Упс, что-то пошло не так!\r\n                </span>}\r\n\r\n                <div className=\"form__button\">\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </div>\r\n\r\n                <span className={`form__footerField pt-20`}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Уже зарегистрированы?\r\n                    </p>\r\n                    <Link to={'/login'}>Войти</Link>\r\n                </span>\r\n\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React, { useState} from 'react';\r\nimport './forms-styles.scss'\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {Link} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { requestNewPassword } from '../../services/actions/auth'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst ForgotPasswordPage: React.FC = () => {\r\n\r\n    const {forgotPasswordSuccess, isAuthorised} = useSelector(store => store.auth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [requestPasswordForm, setRequestPasswordForm] = useState({\r\n        email: ''\r\n    })\r\n\r\n    const handleChange = (e : React.ChangeEvent<HTMLInputElement>) => {\r\n        setRequestPasswordForm({\r\n            ...requestPasswordForm,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e : React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        dispatch(requestNewPassword(requestPasswordForm))\r\n    }\r\n\r\n    return forgotPasswordSuccess ? ( <Redirect to=\"/reset-password\" /> ) : isAuthorised ? ( <Redirect to=\"/\" /> ) : (\r\n        <main className=\"form container\">\r\n            <form className=\"form__box\" onSubmit={handleSubmit}>\r\n\r\n                <p className=\"text text_type_main-medium pb-6 form__header\">Восстановление пароля</p>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <Input\r\n                        type={'email'}\r\n                        placeholder={'Укажите e-mail'}\r\n                        icon={undefined}\r\n                        value={requestPasswordForm.email}\r\n                        name={'email'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        onChange={ e => handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                { forgotPasswordSuccess === false && <span className=\"text text_type_main-default form__errorMessage mt-2 mb-6\" >\r\n                    Упс, что-то пошло не так!\r\n                </span>}\r\n\r\n                <div className=\"form__button\">\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Восстановить\r\n                    </Button>\r\n                </div>\r\n\r\n                <span className={`form__footerField pt-20`}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Вспомнили пароль?\r\n                    </p>\r\n                    <Link to={'/login'}>Войти</Link>\r\n                </span>\r\n\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default ForgotPasswordPage;\r\n","import React, { useState } from 'react';\r\nimport './forms-styles.scss'\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport {Link} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { resetPassword } from '../../services/actions/auth'\r\n\r\nconst ResetPasswordPage: React.FC = () => {\r\n\r\n    const {isResetPaswordRequested, resetPasswordSuccess} = useSelector( store => store.auth);\r\n    const dispatch = useDispatch()\r\n\r\n    const [resetPasswordForm, setResetPasswordForm] = useState({\r\n        password: '',\r\n        token: ''\r\n    })\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setResetPasswordForm({\r\n            ...resetPasswordForm,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault();\r\n        dispatch(resetPassword(resetPasswordForm))\r\n    }\r\n\r\n    return isResetPaswordRequested? (\r\n        <main className=\"form container\">\r\n            <form className=\"form__box\" onSubmit={handleSubmit}>\r\n\r\n                <p className=\"text text_type_main-medium pb-6 form__header\">Восстановление пароля</p>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <Input\r\n                        type={'password'}\r\n                        placeholder={'Введите новый пароль'}\r\n                        icon={'ShowIcon'}\r\n                        value={resetPasswordForm.password}\r\n                        name={'password'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        onChange={ e => handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form__input mb-6\">\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Введите код из письма'}\r\n                        icon={undefined}\r\n                        value={resetPasswordForm.token}\r\n                        name={'token'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        onChange={ e => handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n                { resetPasswordSuccess === false && <span className=\"text text_type_main-default form__errorMessage mt-2 mb-6\" >\r\n                    Упс, что-то пошло не так!\r\n                </span>}\r\n\r\n                <div className=\"form__button\">\r\n                    <Button type=\"primary\" size=\"medium\">\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n\r\n                <span className={`form__footerField pt-20`}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        Вспомнили пароль?\r\n                    </p>\r\n                    <Link to={'/login'}>Войти</Link>\r\n                </span>\r\n\r\n            </form>\r\n        </main>\r\n    ) : (\r\n        <Redirect to={'/'} />\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useDispatch, useSelector } from '../../services/hooks';\r\nimport { getUserData, updateUserData } from '../../services/actions/auth'\r\nimport './profile-edit-data.scss'\r\n\r\ntype TUserData = {\r\n    email: string;\r\n    name: string;\r\n    password?: string\r\n}\r\n\r\nexport const ProfileEditData = () => {\r\n\r\n    const {userInfo} = useSelector( store => store.auth )\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect( () => {\r\n        if(!userInfo.email) {\r\n            dispatch(getUserData())\r\n        }\r\n        setUserData(userInfo)\r\n    }, [dispatch, userInfo])\r\n\r\n    const [userData, setUserData] = useState<TUserData>(userInfo)\r\n\r\n    const [isInpuputChanged, setIsInputChanged] = useState(false)\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserData({\r\n            ...userData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        setIsInputChanged(true)\r\n    }\r\n\r\n    const handleSubmit = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault()\r\n        dispatch(updateUserData(userData))\r\n    }\r\n\r\n    const handleCancel = (e: React.SyntheticEvent<EventTarget>) => {\r\n        e.preventDefault()\r\n        setUserData(userInfo)\r\n    }\r\n\r\n    return ( <form className='profile__box' onSubmit={handleSubmit}>\r\n        <div className=\"profile__input mb-6\">\r\n            <Input\r\n                type={'text'}\r\n                placeholder={'Имя'}\r\n                icon={'EditIcon'}\r\n                value={userData.name}\r\n                name={'name'}\r\n                error={false}\r\n                errorText={'Ошибка'}\r\n                size={'default'}\r\n                onChange={ e => handleChange(e)}\r\n                />\r\n        </div>\r\n\r\n        <div className=\"profile__input mb-6\">\r\n            <Input\r\n                type={'email'}\r\n                placeholder={'E-mail'}\r\n                icon={'EditIcon'}\r\n                value={userData.email}\r\n                name={'email'}\r\n                error={false}\r\n                errorText={'Ошибка'}\r\n                size={'default'}\r\n                onChange={ e => handleChange(e)}\r\n                />\r\n        </div>\r\n\r\n        <div className=\"profile__input\">\r\n            <Input\r\n                type={'password'}\r\n                placeholder={'Пароль'}\r\n                icon={'EditIcon'}\r\n                value={userData.password ? userData.password : ''}\r\n                name={'password'}\r\n                error={false}\r\n                errorText={'Ошибка'}\r\n                size={'default'}\r\n                onChange={ e => handleChange(e)}\r\n                />\r\n        </div>\r\n\r\n        { isInpuputChanged && <div className=\"profile__buttons pt-5\">\r\n            <Button type=\"primary\" size=\"small\">\r\n                Сохранить\r\n            </Button>\r\n\r\n            <Button type=\"secondary\" size=\"medium\" onClick={handleCancel}>\r\n                Сбросить\r\n            </Button>\r\n        </div> }\r\n    </form>)\r\n\r\n}\r\n","import { TOrders } from '../types/data'\r\n\r\nexport const WS_CONNECTION_START = 'wsReducer/WS_CONNECTION_START' as const;\r\nexport const WS_CONNECTION_STOP = 'wsReducer/WS_CONNECTION_STOP' as const;\r\nexport const WS_CONNECTION_SUCCESS = 'wsReducer/WS_CONNECTION_SUCCESS' as const;\r\nexport const WS_CONNECTION_ERROR = 'wsReducer/WS_CONNECTION_ERROR' as const;\r\nexport const WS_CONNECTION_CLOSED = 'wsReducer/WS_CONNECTION_CLOSED' as const;\r\nexport const WS_GET_MESSAGE = 'wsReducer/WS_GET_MESSAGE' as const;\r\nexport const WS_SEND_MESSAGE = 'wsReducer/WS_SEND_MESSAGE' as const;\r\n\r\n\r\nexport interface IWsConnectionSuccess {\r\n    readonly type : typeof WS_CONNECTION_SUCCESS;\r\n}\r\n\r\nexport interface IWsConnectionError {\r\n    readonly type : typeof WS_CONNECTION_ERROR;\r\n    readonly payload: string\r\n}\r\n\r\nexport interface IWsConnectionClosed {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IWsGetMessage {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    readonly payload: TOrders\r\n}\r\n\r\nexport type TWsActions = IWsConnectionSuccess | IWsConnectionError | IWsConnectionClosed | IWsGetMessage\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport styles from './profile-orders-history.module.scss'\r\nimport { ProfileOrdersItem } from './'\r\nimport { WS_CONNECTION_START, WS_CONNECTION_STOP} from '../../services/actions/web-socket'\r\nimport Preloader from '../common/preloader'\r\nimport { TOrder, TOrderElement, TIngredient } from '../../services/types/data'\r\n\r\nexport const ProfileOrdersHistory = () => {\r\n\r\n    const {data} = useSelector( store => store.webSocket)\r\n    const {ingredients} = useSelector( store => store.burgerIngredients)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch({\r\n            type: WS_CONNECTION_START,\r\n            payload: {\r\n                url: 'wss://norma.nomoreparties.space/orders',\r\n                isToken: true\r\n            }\r\n        })\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_STOP})\r\n        }\r\n    }, [dispatch])\r\n\r\n    const orderElements: React.ReactElement[] = []\r\n\r\n    if (data.orders) {\r\n        data.orders.forEach( (item: TOrder, index: number) => {\r\n            if (item.ingredients && item.ingredients.length > 0 && item._id) {\r\n                let element: TOrderElement = {\r\n                    id: item._id,\r\n                    number: item.number,\r\n                    date: item.createdAt,\r\n                    name: item.name,\r\n                    status: item.status,\r\n                    ingredientsImages: [],\r\n                    price: null\r\n                }\r\n\r\n                item.ingredients.forEach( (id : string) => {\r\n                    let ingredient = ingredients.find( (i: TIngredient) => i._id === id)\r\n                    if (ingredient) {\r\n                        element.ingredientsImages.push({name: ingredient!.name, image: ingredient!.image_mobile})\r\n                        element!.price! += ingredient!.price\r\n                    }\r\n                })\r\n\r\n                orderElements.push(\r\n                    <ProfileOrdersItem  data={element} key={index}/>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    return data.success && data.orders ? (\r\n        <div className={`${styles.orders} pr-2`}>\r\n            {orderElements.reverse()}\r\n        </div>\r\n    )\r\n    : (<Preloader />)\r\n\r\n}\r\n","import React from 'react'\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/ru';\r\nimport 'moment-timezone';\r\nimport {useDispatch} from '../../services/hooks'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './profile-orders-item.module.scss'\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { MODAL_OPEN } from '../../services/actions/app'\r\nimport { TOrderElement } from '../../services/types/data'\r\n\r\ntype TProps={\r\n    data: TOrderElement\r\n}\r\n\r\nexport const ProfileOrdersItem: React.FC<TProps> = ({data}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const ingredientsList: JSX.Element[] = []\r\n\r\n    data.ingredientsImages.forEach( (element, index) => {\r\n\r\n        if (data.ingredientsImages.length > 5) {\r\n            if ( index < 5 ) {\r\n                ingredientsList.push(\r\n                    <div className={styles.ordersItem__ingredient} style={{zIndex: 10 - index}} key={index}>\r\n                        <img src={element.image} alt={element.name} />\r\n                    </div>\r\n                )\r\n            }\r\n            if ( index === 5 ) {\r\n                ingredientsList.push(\r\n                    <div className={styles.ordersItem__ingredient} style={{zIndex: 10 - index}} key={index}>\r\n                        <img src={element.image} alt={element.name} />\r\n                        <div className={styles.ordersItem__counter}>\r\n                            <p className=\"text text_type_main-default\">+{data.ingredientsImages.length - 5}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            ingredientsList.push(\r\n                <div className={styles.ordersItem__ingredient} style={{zIndex: 10 - index}} key={index}>\r\n                    <img src={element.image} alt={element.name} />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n\r\n    const handleModalOpen = () => {\r\n        dispatch({\r\n            type: MODAL_OPEN,\r\n            payload: {\r\n                isModalOpen: true,\r\n                modalType: 'profileOrder'\r\n            }\r\n        })\r\n    }\r\n\r\n    const calendarStrings = {\r\n        lastDay : '[Вчера, ] LT [GMT]Z',\r\n        sameDay : '[Сегодня, ] LT [GMT]Z',\r\n        nextDay : '[Завтра, ] LT [GMT]Z',\r\n        lastWeek : 'D MMM [в] LT',\r\n        nextWeek : 'D MMM [в] LT',\r\n        sameElse : 'L'\r\n    };\r\n\r\n    return (\r\n        <Link to={`/profile/orders/${data.id}`} className={`${styles.ordersItem} pt-6 pl-6 pr-6 pb-6`} onClick={handleModalOpen}>\r\n            <div className={`${styles.ordersItem__header} pb-6`}>\r\n                <p className=\"text text_type_digits-default\">\r\n                    #{data.number}\r\n                </p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                    <Moment date={data.date} locale=\"ru\" calendar={calendarStrings} />\r\n                </p>\r\n            </div>\r\n\r\n            <p className=\"text text_type_main-medium pb-2\">\r\n                {data.name}\r\n            </p>\r\n\r\n            <p className={`${data.status === \"done\" && styles.order__success} text text_type_main-default mb-6`}>\r\n                {data.status === \"created\" && \"Создан\"}\r\n                {data.status === \"pending\" && \"Готовится\"}\r\n                {data.status === \"done\" && \"Выполнен\"}\r\n            </p>\r\n\r\n            <div className={styles.ordersItem__footer}>\r\n                <div className={styles.ordersItem__ingredients}>\r\n                    {ingredientsList}\r\n                </div>\r\n                <div className={`${styles.ordersItem__price} ml-6`}>\r\n                    <p className=\"text text_type_digits-default pr-2\">{data.price}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './profile.module.scss'\r\nimport { useDispatch } from '../../services/hooks';\r\nimport { userLogout } from '../../services/actions/auth'\r\nimport { ProfileEditData, ProfileOrdersHistory } from '../profile-tabs'\r\nimport { Route, useLocation } from 'react-router-dom'\r\n\r\nconst ProfilePage: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleLogout = () => {\r\n        dispatch(userLogout())\r\n    }\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <main className={`${styles.profile} container pl-5 pr-5`} >\r\n            <section className={styles.profile__nav}>\r\n                <NavLink to={'/profile'} className={styles.navLink} activeClassName={location.pathname !== \"/profile\" ? undefined : styles.active}>\r\n                    <p className=\"text text_type_main-medium\">\r\n                        Профиль\r\n                    </p>\r\n                </NavLink>\r\n                <NavLink to={'/profile/orders'} className={styles.navLink} activeClassName={styles.active}>\r\n                    <p className=\"text text_type_main-medium\">\r\n                        История заказов\r\n                    </p>\r\n                </NavLink>\r\n                <NavLink to={'/login'} className={styles.navLink} activeClassName=\"active\" onClick={handleLogout}>\r\n                    <p className=\"text text_type_main-medium\">\r\n                        Выход\r\n                    </p>\r\n                </NavLink>\r\n\r\n                <Route exact path={'/profile'}>\r\n                    <p className={`${styles.gray} text text_type_main-default mt-20`}>\r\n                        В этом разделе вы можете изменить свои персональные данные\r\n                    </p>\r\n                </Route>\r\n\r\n                <Route exact path={'/profile/orders'}>\r\n                    <p className={`${styles.gray} text text_type_main-default mt-20`}>\r\n                        В этом разделе вы можете просмотреть свою историю заказов\r\n                    </p>\r\n                </Route>\r\n\r\n            </section>\r\n\r\n            <section className={`${styles.profile__body} ml-15`}>\r\n\r\n                <Route exact path={'/profile'}>\r\n                    <ProfileEditData />\r\n                </Route>\r\n\r\n                <Route exact path={'/profile/orders'}>\r\n                    <ProfileOrdersHistory />\r\n                </Route>\r\n\r\n            </section>\r\n    </main>\r\n)\r\n}\r\n\r\nexport default ProfilePage;\r\n","export default __webpack_public_path__ + \"static/media/warning-exclamation-mark-light-blue.7db674b2.svg\";","import React from 'react';\r\nimport styles from './not-found.module.scss'\r\nimport icon from '../../images/warning-exclamation-mark-light-blue.svg'\r\n\r\nconst NotFoundPage: React.FC = () => {\r\n    return (\r\n        <main className={`${styles.page} container`}>\r\n            <img src={icon} alt=\"page not found\" />\r\n            <p className=\"text text_type_main-medium\">\r\n                Данная страница не найдена\r\n            </p>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import React, {useEffect, useState} from 'react';\r\nimport IngredientDetails from '../burger-ingredients/ingredient-details'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { useParams } from 'react-router-dom'\r\nimport { SET_MODAL_DATA, REMOVE_MODAL_DATA } from '../../services/actions/ingredients'\r\nimport Preloader from '../common/preloader'\r\nimport styles from './ingredient.module.scss'\r\nimport icon from '../../images/warning-exclamation-mark-light-blue.svg'\r\nimport { TIngredient } from '../../services/types/data'\r\n\r\nconst IngredientPage: React.FC = () => {\r\n\r\n    const {ingredients, ingredientsRequest, ingredientsSuccess} = useSelector( store => store.burgerIngredients)\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    const [isFetching, setIsFetching] = useState(false)\r\n    const [isWrongID, setIsWrongID] = useState(false)\r\n\r\n    useEffect( () => {\r\n        if (ingredients.length === 0) {\r\n            setIsFetching(true)\r\n        }\r\n    }, [])\r\n\r\n    useEffect( () => {\r\n        if (ingredients.length > 0 && !ingredientsRequest && ingredientsSuccess !== false) {\r\n            const ingredient = ingredients.find( (item: TIngredient) => item._id === id)\r\n            if(!ingredient) {setIsWrongID(true)}\r\n            dispatch({\r\n                type: SET_MODAL_DATA,\r\n                payload: {\r\n                    modalData: ingredient\r\n                }\r\n            })\r\n            setIsFetching(false)\r\n        }\r\n        return () => {\r\n            dispatch({\r\n                type: REMOVE_MODAL_DATA\r\n            })\r\n        }\r\n    }, [ingredients.length])\r\n\r\n    if ( ingredientsSuccess === false) {\r\n        return (\r\n            <main className={styles.ingredient}>\r\n                <div className={styles.ingredient__wrongID}>\r\n                    <img src={icon} alt=\"Ingredient ID is wrong\" />\r\n                    <p className=\"text text_type_main-medium\">\r\n                        Ошибка загрузки данных с сервера!\r\n                    </p>\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n\r\n    return isFetching ? (\r\n        <Preloader />\r\n    ) : isWrongID ? (\r\n        <main className={styles.ingredient}>\r\n            <div className={styles.ingredient__wrongID}>\r\n                <img src={icon} alt=\"Ingredient ID is wrong\" />\r\n                <p className=\"text text_type_main-medium\">\r\n                    Ошибка! Не правильный ID ингредиента!\r\n                </p>\r\n            </div>\r\n        </main>\r\n    ) : (\r\n        <main className={styles.ingredient}>\r\n            <p className=\"text text_type_main-large\">Детали ингредиента</p>\r\n            <IngredientDetails />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default IngredientPage;\r\n","import React from 'react';\r\nimport {useSelector} from '../../services/hooks'\r\nimport styles from './feed-left.module.scss';\r\nimport { FeedOrderElement } from './'\r\nimport { TOrder, TOrderElement, TIngredient } from '../../services/types/data'\r\n\r\ntype TProps = {\r\n    orders: TOrder[]\r\n}\r\n\r\nconst FeedLeftColumn: React.FC<TProps> = ({orders}) => {\r\n\r\n    const {ingredients} = useSelector( store => store.burgerIngredients)\r\n\r\n    const orderElements: React.ReactElement[] = []\r\n\r\n    orders.forEach( (item, index) => {\r\n        if (item.ingredients && item.ingredients.length > 0 && item._id) {\r\n            let element : TOrderElement = {\r\n                id: item._id,\r\n                number: item.number,\r\n                date: item.createdAt,\r\n                name: item.name,\r\n                ingredientsImages: [],\r\n                price: null\r\n            }\r\n\r\n            item.ingredients.forEach( id => {\r\n                let ingredient = ingredients.find( (i : TIngredient) => i._id === id)\r\n                if(ingredient) {\r\n                    element.ingredientsImages.push({name: ingredient.name, image: ingredient.image_mobile})\r\n                    element.price! += ingredient.price\r\n                }\r\n            })\r\n\r\n            orderElements.push(\r\n                <FeedOrderElement  data={element} key={index}/>\r\n            )\r\n        }\r\n    })\r\n\r\n    return (\r\n        <section className={`${styles.feedColumn} pr-2`}>\r\n            {orderElements}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FeedLeftColumn\r\n","import React from 'react';\r\nimport styles from './feed-right.module.scss';\r\nimport { TOrder } from '../../services/types/data'\r\n\r\ntype TProps ={\r\n    orders: TOrder[];\r\n    total: number | null;\r\n    totalToday: number | null\r\n}\r\n\r\nconst FeedRightColumn: React.FC<TProps> = ({orders, total, totalToday}) => {\r\n\r\n    let ordersSuccess : { col1: JSX.Element[], col2: JSX.Element[]} = {col1: [], col2: []}\r\n    let ordersInProgress : { col1: JSX.Element[], col2: JSX.Element[]} = {col1: [], col2: []}\r\n\r\n    if ( orders.length > 0 ) {\r\n\r\n        let succes: TOrder[] = []\r\n        let inProgress: TOrder[] = []\r\n\r\n        orders.forEach( item => {\r\n            item.status === \"done\" ? succes.push(item) : inProgress.push(item)\r\n        })\r\n\r\n        if (succes.length > 10) {\r\n\r\n            let succes1: JSX.Element[] = []\r\n            let success2: JSX.Element[] = []\r\n\r\n            succes.forEach( (item, index) => {\r\n\r\n                index < 10 && succes1.push(<p className={`${styles.ordersList__item} ${styles.ready} text text_type_digits-default pt-2`} key={index}>{item.number}</p>)\r\n                index >= 10 && index < 20 && success2.push(<p className={`${styles.ordersList__item} ${styles.ready} text text_type_digits-default pt-2`} key={index}>{item.number}</p>)\r\n            })\r\n\r\n            ordersSuccess = {col1: succes1, col2: success2}\r\n\r\n        } else {\r\n\r\n            succes.forEach( (item, index) => {\r\n\r\n                ordersSuccess.col1.push(<p className={`${styles.ordersList__item} ${styles.ready} text text_type_digits-default pt-2`} key={index}>{item.number}</p>)\r\n            })\r\n\r\n        }\r\n\r\n\r\n        if (inProgress.length > 10) {\r\n\r\n            let inProgress1: JSX.Element[] = []\r\n            let inProgress2: JSX.Element[] = []\r\n\r\n            inProgress.forEach( (item, index) => {\r\n\r\n                index < 10 && inProgress1.push(<p className={`${styles.ordersList__item} text text_type_digits-default pt-2`} key={index}>{item.number}</p>)\r\n                index >= 10 && index < 20 && inProgress2.push(<p className={`${styles.ordersList__item} text text_type_digits-default pt-2`} key={index}>{item.number}</p>)\r\n            })\r\n\r\n            ordersInProgress = { col1: inProgress1, col2: inProgress2}\r\n\r\n        } else {\r\n\r\n            inProgress.forEach( (item, index) => {\r\n\r\n                ordersInProgress.col1.push(<p className={`${styles.ordersList__item} text text_type_digits-default pt-2`} key={index}>{item.number}</p>)\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <section className={styles.feedColumn}>\r\n            <div className={`${styles.ordersList} mb-15`}>\r\n                <div className={styles.ordersList__ready}>\r\n\r\n                    <p className={`${styles.ordersList__header} text text_type_main-medium pb-4`}>\r\n                        Готовы:\r\n                    </p>\r\n                    <div className={styles.ordersList__col1}>{ordersSuccess.col1}</div>\r\n                    <div className={styles.ordersList__col2}>{ordersSuccess.col2}</div>\r\n                </div>\r\n                <div className={styles.ordersList__inProgress}>\r\n\r\n                    <p className={`${styles.ordersList__header} text text_type_main-medium pb-4`}>\r\n                        В работе:\r\n                    </p>\r\n                    <div className={styles.ordersList__col1}>{ordersInProgress.col1}</div>\r\n                    <div className={styles.ordersList__col2}>{ordersInProgress.col2}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"text text_type_main-medium\">\r\n                Выполнено за все время:\r\n            </p>\r\n\r\n            <p className={`${styles.ordersCounter} text text_type_digits-large mb-15`}>{total}</p>\r\n\r\n            <p className=\"text text_type_main-medium\">\r\n                Выполнено за сегодня:\r\n            </p>\r\n\r\n            <p className={`${styles.ordersCounter} text text_type_digits-large`}>{totalToday}</p>\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default FeedRightColumn\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/ru';\r\nimport 'moment-timezone';\r\nimport {useDispatch} from '../../services/hooks'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './feed-order-element.module.scss'\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { MODAL_OPEN } from '../../services/actions/app'\r\nimport { TOrderElement } from '../../services/types/data'\r\n\r\ntype TData = {\r\n    data: TOrderElement\r\n}\r\n\r\nconst FeedOrderElement: React.FC<TData> = ({data}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const ingredientsList: JSX.Element[] = []\r\n\r\n    data.ingredientsImages.forEach( (element, index) => {\r\n\r\n        if (data.ingredientsImages.length > 5) {\r\n            if ( index < 5 ) {\r\n                ingredientsList.push(\r\n                    <div className={styles.element__ingredient} style={{zIndex: 10 - index}} key={index}>\r\n                        <img src={element.image} alt={element.name} />\r\n                    </div>\r\n                )\r\n            }\r\n            if ( index === 5 ) {\r\n                ingredientsList.push(\r\n                    <div className={styles.element__ingredient} style={{zIndex: 10 - index}} key={index}>\r\n                        <img src={element.image} alt={element.name} />\r\n                        <div className={styles.element__counter}>\r\n                            <p className=\"text text_type_main-default\">+{data.ingredientsImages.length - 5}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            ingredientsList.push(\r\n                <div className={styles.element__ingredient} style={{zIndex: 10 - index}} key={index}>\r\n                    <img src={element.image} alt={element.name} />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n\r\n    const handleModalOpen = () => {\r\n        dispatch({\r\n            type: MODAL_OPEN,\r\n            payload: {\r\n                isModalOpen: true,\r\n                modalType: 'feedOrder'\r\n            }\r\n        })\r\n    }\r\n\r\n    const calendarStrings = {\r\n        lastDay : '[Вчера, ] LT [GMT]Z',\r\n        sameDay : '[Сегодня, ] LT [GMT]Z',\r\n        nextDay : '[Завтра, ] LT [GMT]Z',\r\n        lastWeek : 'D MMM [в] LT',\r\n        nextWeek : 'dddd [в] LT',\r\n        sameElse : 'L'\r\n    };\r\n\r\n    return (\r\n        <Link to={`/feed/${data.id}`} className={`${styles.element} mb-4 pl-6 pr-6 pb-6 pt-6`} onClick={handleModalOpen}>\r\n\r\n            <div className={`${styles.element__header} pb-6`}>\r\n                <p className=\"text text_type_digits-default\">\r\n                    #{data.number}\r\n                </p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                    <Moment date={data.date} locale=\"ru\" calendar={calendarStrings} />\r\n                </p>\r\n            </div>\r\n\r\n            <p className=\"text text_type_main-medium pb-6\">\r\n                {data.name}\r\n            </p>\r\n\r\n            <div className={styles.element__footer}>\r\n                <div className={styles.element__ingredients}>\r\n                    {ingredientsList}\r\n                </div>\r\n                <div className={`${styles.element__price} ml-6`}>\r\n                    <p className=\"text text_type_digits-default pr-2\">{data.price}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default FeedOrderElement;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport styles from './feed.module.scss';\r\nimport { FeedLeftColumn, FeedRightColumn } from '../feed-components'\r\nimport { WS_CONNECTION_START, WS_CONNECTION_STOP} from '../../services/actions/web-socket'\r\nimport Preloader from '../common/preloader'\r\n\r\nconst FeedPage: React.FC = () => {\r\n\r\n    const {data} = useSelector( store => store.webSocket)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch({\r\n            type: WS_CONNECTION_START,\r\n            payload: {\r\n                url: 'wss://norma.nomoreparties.space/orders/all'\r\n            }\r\n        })\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_STOP})\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    return data.success && data.orders.length > 0 ? (\r\n        <main className={`${styles.feed} container pl-5 pr-5 pt-10`}>\r\n\r\n            <p className={`${styles.feed__heading} text text_type_main-large pb-5`}>\r\n                Лента заказов\r\n            </p>\r\n\r\n            <FeedLeftColumn orders={data.orders} />\r\n            <FeedRightColumn orders={data.orders} total={data.total} totalToday={data.totalToday}/>\r\n\r\n        </main>\r\n    )\r\n    : (<Preloader />)\r\n}\r\n\r\nexport default FeedPage\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom'\r\nimport Moment from 'react-moment';\r\nimport 'moment/locale/ru';\r\nimport 'moment-timezone';\r\nimport styles from './order-details.module.scss'\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components'\r\nimport { useSelector, useDispatch } from '../../services/hooks';\r\nimport { requestUserOrders, requestAllOrders} from '../../services/actions/order'\r\nimport Preloader from '../common/preloader'\r\nimport { TOrder, TIngredient } from '../../services/types/data'\r\n\r\nconst OrderDetails: React.FC = () => {\r\n\r\n    const {ingredients, ingredientsSuccess} = useSelector( store => store.burgerIngredients)\r\n    const {ordersList, ordersListRequest, ordersListSuccess} = useSelector( store => store.order)\r\n    const location = useLocation()\r\n    const { id } = useParams<{ id: string }>();\r\n    const dispatch = useDispatch()\r\n    const [isWrongID, setIsWrongID] = useState(false)\r\n    const [isFetching, setIsFetching] = useState(true)\r\n\r\n    let orderPrice = 0\r\n    let order = null\r\n    const ingredientsList = []\r\n    useEffect( () => {\r\n        location.pathname.indexOf('/profile/orders') !== -1 ?\r\n        dispatch(requestUserOrders())\r\n        :\r\n        dispatch(requestAllOrders())\r\n        setIsFetching(false)\r\n    }, [])\r\n\r\n    if (ordersListSuccess && !ordersListRequest && !isFetching && ingredientsSuccess) {\r\n\r\n        order = ordersList.find( (element: TOrder) => element._id === id)\r\n        if(!order) {setIsWrongID(true)} else {\r\n\r\n            let ingredients2 = order!.ingredients!.reduce((acc: any, rec: any) => {\r\n                return (typeof acc[rec] !== 'undefined')\r\n                ? { ...acc, [rec]: acc[rec] + 1 }\r\n                : { ...acc, [rec]: 1 }\r\n            }, {})\r\n\r\n            for (var key in ingredients2) {\r\n\r\n                let element = ingredients.find( (i:TIngredient) => i._id === key)\r\n                orderPrice+= ingredients2[key] * element!.price\r\n                ingredientsList.push(\r\n                    <div className={`${styles.ingredient} mt-4`} key={key}>\r\n                        <div className={styles.ingredient_img}>\r\n                            <img src={element!.image_mobile} alt={element!.name} />\r\n                        </div>\r\n\r\n                        <p className={`${styles.ingredient__title} text text_type_main-default pl-4`}>\r\n                            {element!.name}\r\n                        </p>\r\n\r\n                        <span className={styles.ingredient__price}>\r\n                            <p className=\"text text_type_digits-default mr-2\"> {ingredients2[key]} x {element!.price}</p>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </span>\r\n\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const calendarStrings = {\r\n        lastDay : '[Вчера, ] LT [GMT]Z',\r\n        sameDay : '[Сегодня, ] LT [GMT]Z',\r\n        nextDay : '[Завтра, ] LT [GMT]Z',\r\n        lastWeek : 'D MMM [в] LT',\r\n        nextWeek : 'D MMM [в] LT',\r\n        sameElse : 'L'\r\n    };\r\n\r\n    return ordersListSuccess && ingredientsSuccess && !isWrongID && order ? (\r\n        <div className={styles.order__box}>\r\n            <p className={`${styles.order__number} text text_type_digits-default mb-10`}>\r\n                #{order.number}\r\n            </p>\r\n\r\n            <p className=\"text text_type_main-medium pb-3\">\r\n                {order.name}\r\n            </p>\r\n\r\n            <p className={`${order.status === \"done\" && styles.order__success} text text_type_main-default mb-15`}>\r\n                {order.status === \"created\" && \"Создан\"}\r\n                {order.status === \"pending\" && \"Готовится\"}\r\n                {order.status === \"done\" && \"Выполнен\"}\r\n            </p>\r\n\r\n            <p className=\"text text_type_main-medium pb-2\">\r\n                Состав:\r\n            </p>\r\n\r\n            <div className={`${styles.order__ingredientsBox} pr-6`}>\r\n\r\n                {ingredientsList}\r\n\r\n            </div>\r\n\r\n            <div className={`${styles.order__footer} mt-10`}>\r\n\r\n                <p className=\"text text_type_main-default text_color_inactive\">\r\n                    <Moment date={order.createdAt} locale=\"ru\" calendar={calendarStrings} />\r\n                </p>\r\n\r\n                <span className={styles.order__price}>\r\n                    <p className=\"text text_type_digits-default pr-2\">{orderPrice}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </span>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ) : (<Preloader/>)\r\n}\r\n\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport styles from './order.module.scss'\r\nimport OrderDetails from '../order/order-details'\r\n\r\nconst OrderPage: React.FC = () => {\r\n\r\n    return (\r\n        <main className={`${styles.order} container`}>\r\n            <OrderDetails />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default OrderPage\r\n","import { TOGGLE_IS_FETCHING, MODAL_OPEN, MODAL_CLOSE, TAppActions } from '../actions/app'\r\n\r\nexport type TAppState = {\r\n    isFetching: boolean;\r\n    isModalOpen: boolean;\r\n    modalType: 'ingredient' | 'order' | 'feedOrder' | 'profileOrder' | null\r\n}\r\n\r\nexport const initialState: TAppState = {\r\n    isFetching: false,\r\n    isModalOpen: false,\r\n    modalType: null\r\n}\r\n\r\nconst appReducer = (state = initialState, action: TAppActions) : TAppState => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_FETCHING:\r\n        case MODAL_OPEN:\r\n        case MODAL_CLOSE: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {\r\n    INGREDIENTS_REQUEST, INGREDIENTS_SUCCESS,\r\n    INGREDIENTS_ERROR, SET_MODAL_DATA,\r\n    REMOVE_MODAL_DATA, SET_CURRENT_TAB,\r\n    INCREASE_ITEM_COUNTER, DECREASE_ITEM_COUNTER, TIngredientsActions, CLEAR_ITEMS_COUNTER\r\n} from '../actions/ingredients'\r\nimport {TIngredient} from '../types/data'\r\n\r\nexport type TIngredientsState = {\r\n    ingredients: TIngredient[] | [],\r\n    ingredientsRequest: boolean,\r\n    ingredientsSuccess: null | boolean,\r\n    modalData: TIngredient | null,\r\n    error: null | string,\r\n    currentTab: 'buns' | 'sauces' | 'mains'\r\n}\r\n\r\nexport const initialState: TIngredientsState = {\r\n    ingredients: [],\r\n    ingredientsRequest: false,\r\n    ingredientsSuccess: null,\r\n    modalData: null,\r\n    error: null,\r\n    currentTab: 'buns'\r\n}\r\n\r\nconst ingredientsReducer = (state = initialState, action: TIngredientsActions): TIngredientsState => {\r\n    switch (action.type) {\r\n        case INGREDIENTS_REQUEST:\r\n        case INGREDIENTS_SUCCESS:\r\n        case INGREDIENTS_ERROR:\r\n        case SET_MODAL_DATA:\r\n        case SET_CURRENT_TAB: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case REMOVE_MODAL_DATA: {\r\n            return {\r\n                ...state,\r\n                modalData: initialState.modalData\r\n            }\r\n        }\r\n        case INCREASE_ITEM_COUNTER: {\r\n\r\n            const item = state.ingredients.find( i => i._id === action.id)\r\n\r\n            const newItems = state.ingredients.map( (i) => {\r\n                if (i._id === item!._id && i.type === \"bun\") {\r\n                    return {\r\n                            ...i,\r\n                            __v: 2\r\n                    }\r\n                }\r\n                if (i._id !== item!._id && i.type === \"bun\" && item!.type === \"bun\") {\r\n                    return {\r\n                            ...i,\r\n                            __v: 0\r\n                    }\r\n                }\r\n                if (i._id === item!._id && i.type !== \"bun\") {\r\n                    return {\r\n                            ...i,\r\n                            __v: ++i.__v\r\n                    }\r\n                }\r\n                return i\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: newItems\r\n            }\r\n        }\r\n        case DECREASE_ITEM_COUNTER: {\r\n            const newItems = state.ingredients.map( (i) => {\r\n\r\n                if (i._id === action.id && i.type !== \"bun\") {\r\n                    return {\r\n                            ...i,\r\n                            __v:  --i.__v\r\n                    }\r\n                }\r\n                return i\r\n            }\r\n            )\r\n            return {\r\n                ...state,\r\n                ingredients: newItems\r\n            }\r\n        }\r\n        case CLEAR_ITEMS_COUNTER: {\r\n            let newItems = state.ingredients.map( (i) => {\r\n                if (i.__v > 0) {\r\n                    return {\r\n                        ...i,\r\n                        __v:  0\r\n                    }\r\n                }\r\n                return i\r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: newItems\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default ingredientsReducer;\r\n","import { ADD_INGREDIENT, DELETE_INGREDIENT, REPLACE_ITEMS, CLEAR_CONSTRUCTOR, TConstructorActions } from '../actions/constructor'\r\nimport { TIngredient } from '../types/data'\r\n\r\nexport type TConstructorState = {\r\n    bun: null | TIngredient,\r\n    ingredients: TIngredient[] | []\r\n}\r\n\r\nexport const initialState: TConstructorState = {\r\n    bun: null,\r\n    ingredients: []\r\n}\r\n\r\nconst constructorReducer = (state = initialState, action: TConstructorActions): TConstructorState => {\r\n    switch (action.type) {\r\n        case ADD_INGREDIENT: {\r\n\r\n            return action.item.type === \"bun\" ? {\r\n                ...state,\r\n                bun: action.item\r\n            }\r\n            :\r\n            {\r\n                ...state,\r\n                ingredients: [...state.ingredients, action.item]\r\n            }\r\n        }\r\n        case DELETE_INGREDIENT: {\r\n            return {\r\n                ...state,\r\n                ingredients: state.ingredients.filter( (item: TIngredient) => item.hash !== action.hash )\r\n            }\r\n        }\r\n        case REPLACE_ITEMS: {\r\n            const replacingIngredient = state.ingredients.find( (i, index) => index === action.payload.dragIndex)\r\n            let newIngredients = [...state.ingredients]\r\n            newIngredients.splice(action.payload.dragIndex, 1)\r\n            newIngredients.splice(action.payload.hoverIndex, 0, replacingIngredient!)\r\n            return {\r\n                ...state,\r\n                ingredients: newIngredients\r\n            }\r\n        }\r\n        case CLEAR_CONSTRUCTOR: {\r\n            return {\r\n                ...initialState\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default constructorReducer;\r\n","import { CALCULATE_ORDER_PRICE, ORDER_DATA_REQUEST,\r\nORDER_DATA_SUCCESS, ORDER_DATA_ERROR, ORDER_DATA_RESET,\r\nORDERS_LIST_DATA_REQUEST, ORDERS_LIST_DATA_SUCCESS,\r\nORDERS_LIST_DATA_ERROR, TOrderActions } from '../actions/order'\r\nimport { TOrder, TIngredient } from '../types/data'\r\n\r\nexport type TOrderState = {\r\n    price: number;\r\n    orderData: {\r\n        orderID: null | string | number,\r\n        statusIcon: null | string,\r\n        orderStatus: null | string,\r\n        orderDescription: null | string\r\n    };\r\n    orderDataRequest: boolean;\r\n    orderDataSuccess: null | boolean;\r\n    ordersList: TOrder[] | [];\r\n    ordersListRequest: boolean;\r\n    ordersListSuccess: null | boolean;\r\n    error: null | string\r\n}\r\n\r\nexport const initialState: TOrderState = {\r\n    price: 0,\r\n    orderData: {\r\n        orderID: null,\r\n        statusIcon: null,\r\n        orderStatus: null,\r\n        orderDescription: null\r\n    },\r\n    orderDataRequest: false,\r\n    orderDataSuccess: null,\r\n    ordersList: [],\r\n    ordersListRequest: false,\r\n    ordersListSuccess: null,\r\n    error: null\r\n}\r\n\r\nconst orderReducer = (state = initialState, action: TOrderActions): TOrderState => {\r\n    switch (action.type) {\r\n        case ORDER_DATA_REQUEST:\r\n        case ORDER_DATA_SUCCESS:\r\n        case ORDER_DATA_ERROR:\r\n        case ORDERS_LIST_DATA_REQUEST:\r\n        case ORDERS_LIST_DATA_SUCCESS:\r\n        case ORDERS_LIST_DATA_ERROR: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case CALCULATE_ORDER_PRICE: {\r\n            let price = action.bun ? action.bun.price * 2 : 0;\r\n            action.ingredients.forEach( (i: TIngredient) => {\r\n                price += i.price;\r\n             })\r\n            return {\r\n                ...state,\r\n                price\r\n            }\r\n        }\r\n        case ORDER_DATA_RESET: {\r\n            return {\r\n                ...state,\r\n                orderData: initialState.orderData\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default orderReducer;\r\n","import { REGISTRATION_REQUEST, REGISTRATION_SUCCESS, REGISTRATION_ERROR,\r\nLOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_ERROR, FORGOT_PASSWORD,\r\nFORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_ERROR,REQUEST_NEW_PASSWORD,\r\nRESET_PASSWORD_SUCCESS, RESET_PASSWORD_ERROR, SET_AUTHORISED, SET_NO_AUTHORISED\r\n, GET_USER_DATA, GET_USER_DATA_SUCCES, GET_USER_DATA_ERROR, UPDATE_USER_DATA,\r\nUPDATE_USER_DATA_SUCCES, UPDATE_USER_DATA_ERROR, REQUEST_LOGOUT,\r\nREQUEST_LOGOUT_SUCCES, REQUEST_LOGOUT_ERROR, TAuthActions} from '../actions/auth'\r\n\r\nexport type TAuthState = {\r\n    isAuthorised: null | boolean;\r\n    userInfo: {\r\n        email: string,\r\n        name: string\r\n    };\r\n    registrationRequest: boolean;\r\n    registrationSuccess: null | boolean;\r\n    loginRequest: boolean;\r\n    loginSuccess: null | boolean;\r\n    isResetPaswordRequested: boolean;\r\n    forgotPasswordRequest: boolean;\r\n    forgotPasswordSuccess: null | boolean;\r\n    resetPasswordRequest: boolean;\r\n    resetPasswordSuccess: null | boolean;\r\n    getUserDataRequest: boolean;\r\n    getUserDataSuccess: null | boolean;\r\n    updateUserDataRequest: boolean;\r\n    updateUserDataSuccess: null | boolean;\r\n    logoutRequest: boolean;\r\n    logoutSuccess: null | boolean;\r\n}\r\n\r\nexport const initialState: TAuthState = {\r\n    isAuthorised: null,\r\n    userInfo: {\r\n        email: '',\r\n        name: ''\r\n    },\r\n    registrationRequest: false,\r\n    registrationSuccess: null,\r\n    loginRequest: false,\r\n    loginSuccess: null,\r\n    isResetPaswordRequested: false,\r\n    forgotPasswordRequest: false,\r\n    forgotPasswordSuccess: null,\r\n    resetPasswordRequest: false,\r\n    resetPasswordSuccess: null,\r\n    getUserDataRequest: false,\r\n    getUserDataSuccess: null,\r\n    updateUserDataRequest: false,\r\n    updateUserDataSuccess: null,\r\n    logoutRequest: false,\r\n    logoutSuccess: null,\r\n}\r\n\r\nconst authReducer = ( state = initialState, action: TAuthActions): TAuthState => {\r\n    switch (action.type) {\r\n\r\n        case REGISTRATION_REQUEST:\r\n        case REGISTRATION_SUCCESS:\r\n        case REGISTRATION_ERROR:\r\n        case LOGIN_REQUEST:\r\n        case LOGIN_SUCCESS:\r\n        case LOGIN_ERROR:\r\n        case FORGOT_PASSWORD:\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n        case FORGOT_PASSWORD_ERROR:\r\n        case REQUEST_NEW_PASSWORD:\r\n        case RESET_PASSWORD_SUCCESS:\r\n        case RESET_PASSWORD_ERROR:\r\n        case SET_AUTHORISED:\r\n        case SET_NO_AUTHORISED:\r\n        case GET_USER_DATA:\r\n        case GET_USER_DATA_SUCCES:\r\n        case GET_USER_DATA_ERROR:\r\n        case UPDATE_USER_DATA:\r\n        case UPDATE_USER_DATA_SUCCES:\r\n        case UPDATE_USER_DATA_ERROR:\r\n        case REQUEST_LOGOUT:\r\n        case REQUEST_LOGOUT_SUCCES:\r\n        case REQUEST_LOGOUT_ERROR: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import {\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_CLOSED,\r\n    WS_GET_MESSAGE,\r\n    TWsActions\r\n} from '../actions/web-socket';\r\nimport { TOrder } from '../types/data'\r\n\r\nexport type TWsState = {\r\n    wsConnected: boolean,\r\n    data: {\r\n        success: null | boolean,\r\n        orders: TOrder[] | [],\r\n        totalToday: null | number,\r\n        total: null | number\r\n    },\r\n    error: string | null\r\n}\r\n\r\nexport const initialState: TWsState = {\r\n    wsConnected: false,\r\n    data: {\r\n        success: null,\r\n        orders: [],\r\n        totalToday: null,\r\n        total: null\r\n    },\r\n    error: ''\r\n}\r\n\r\nconst wsReducer = (state = initialState, action: TWsActions): TWsState => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                wsConnected: true\r\n            };\r\n        case WS_CONNECTION_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                wsConnected: false\r\n            };\r\n        case WS_CONNECTION_CLOSED:\r\n            return {\r\n                ...initialState\r\n            };\r\n        case WS_GET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                data: action.payload\r\n            };\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default wsReducer;\r\n","import { combineReducers, createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {appReducer, ingredientsReducer, constructorReducer, orderReducer, authReducer, wsReducer} from './reducers'\r\nimport { socketMiddleware } from './middleware/'\r\nimport { WS_CONNECTION_START, WS_CONNECTION_STOP, WS_CONNECTION_SUCCESS, WS_CONNECTION_ERROR, WS_CONNECTION_CLOSED,\r\nWS_GET_MESSAGE,WS_SEND_MESSAGE} from './actions/web-socket'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    burgerIngredients: ingredientsReducer,\r\n    burgerConstructor: constructorReducer,\r\n    order: orderReducer,\r\n    webSocket: wsReducer,\r\n})\r\n\r\nexport type TWsActions = {\r\n    wsInit: typeof WS_CONNECTION_START;\r\n    wsStop: typeof WS_CONNECTION_STOP;\r\n    wsSendMessage: typeof WS_SEND_MESSAGE;\r\n    onOpen: typeof WS_CONNECTION_SUCCESS;\r\n    onClose: typeof WS_CONNECTION_CLOSED;\r\n    onError: typeof WS_CONNECTION_ERROR;\r\n    onMessage: typeof WS_GET_MESSAGE;\r\n}\r\n\r\nconst wsActions: TWsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsStop: WS_CONNECTION_STOP,\r\n  wsSendMessage: WS_SEND_MESSAGE,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_MESSAGE\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunk, socketMiddleware(wsActions)));\r\n\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { useSelector } from '../../services/hooks';\r\nimport { Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ntype TProps = {\r\n    children: React.ReactNode,\r\n    path: string,\r\n    exact?: boolean\r\n}\r\n\r\nconst ProtectedRoute: React.FC<TProps> = (props) => {\r\n\r\n    const {children, ...rest} = props\r\n\r\n    const { isAuthorised } =  useSelector( store => store.auth )\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) => (\r\n                isAuthorised !== false ? children\r\n                : <Redirect\r\n                    to={{\r\n                        pathname: '/login',\r\n                        state: { from: location }\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import React from 'react'\r\nimport { useSelector } from '../../services/hooks';\r\nimport Modal from '../modal/modal'\r\n\r\ntype TProps = {\r\n    readonly ComponentPage: React.ComponentType;\r\n    readonly ComponentModal: React.ComponentType;\r\n    readonly modalName: string;\r\n    readonly modalHeader?: string;\r\n};\r\n\r\n\r\nconst ComponentSwitcher: React.FC<TProps> = ({ComponentPage, ComponentModal, modalName, modalHeader}) => {\r\n\r\n    const { isModalOpen , modalType } = useSelector( store => store.app)\r\n\r\n    return isModalOpen && modalType === modalName\r\n    ? ( <Modal header ={ modalHeader ? modalHeader : undefined}>\r\n        <ComponentModal />\r\n        </Modal>)\r\n        : (\r\n            <ComponentPage />\r\n        )\r\n\r\n}\r\n\r\nexport default ComponentSwitcher;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport AppHeader from '../app-header/app-header';\r\nimport { BurgerMain, FeedPage, OrderPage, IngredientPage, ProfilePage, LoginPage, RegisterPage,\r\nForgotPasswordPage, ResetPasswordPage, NotFoundPage } from '../pages';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../../services/store';\r\nimport ProtectedRoute from '../hoc/protected-route'\r\nimport ComponentSwitcher from '../hoc/component-switcher'\r\nimport {useDispatch} from '../../services/hooks';\r\nimport { requestIngredients } from '../../services/actions/ingredients'\r\nimport { IngredientDetails } from '../burger-ingredients'\r\nimport OrderDetails from '../order/order-details'\r\n\r\nconst App: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect( () => {\r\n        dispatch(requestIngredients())\r\n    }, [dispatch])\r\n\r\n    return (\r\n            <>\r\n                <AppHeader />\r\n\r\n                <Switch>\r\n                    <Route exact path={'./'}>\r\n                        <BurgerMain />\r\n                    </Route>\r\n                    <Route exact path={'/feed'}>\r\n                        <FeedPage />\r\n                    </Route>\r\n                    <Route exact path={'/feed/:id'}>\r\n                        <ComponentSwitcher ComponentPage={OrderPage} ComponentModal={OrderDetails}\r\n                            modalName={'feedOrder'} modalHeader={undefined}/>\r\n                    </Route>\r\n                    <Route exact path={'/ingredients/:id'}>\r\n                        <ComponentSwitcher ComponentPage={IngredientPage} ComponentModal={IngredientDetails}\r\n                            modalName={'ingredient'} modalHeader={'Детали ингредиента'} />\r\n                    </Route>\r\n                    <ProtectedRoute path={'/profile/orders/:id'}>\r\n                        <ComponentSwitcher ComponentPage={OrderPage} ComponentModal={OrderDetails}\r\n                            modalName={'profileOrder'} modalHeader={undefined} />\r\n                    </ProtectedRoute>\r\n                    <ProtectedRoute path={'/profile'}>\r\n                        <ProfilePage />\r\n                    </ProtectedRoute>\r\n                    <Route exact path={'/login'}>\r\n                        <LoginPage />\r\n                    </Route>\r\n                    <Route exact path={'/register'}>\r\n                        <RegisterPage />\r\n                    </Route>\r\n                    <Route exact path={'/forgot-password'}>\r\n                        <ForgotPasswordPage />\r\n                    </Route>\r\n                    <Route exact path={'/reset-password'}>\r\n                        <ResetPasswordPage />\r\n                    </Route>\r\n                    <Route exact path={'*'}>\r\n                        <NotFoundPage />\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n    )\r\n}\r\n\r\nconst AppContainer = () => {\r\n    return (\r\n        <Provider store={store} >\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </ Provider>\r\n    )\r\n}\r\n\r\nexport default AppContainer;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__E2DRE\",\"profile__nav\":\"profile_profile__nav__om5HE\",\"navLink\":\"profile_navLink__2FM55\",\"active\":\"profile_active__1_vZi\",\"gray\":\"profile_gray__3K-Ki\",\"profile__body\":\"profile_profile__body__1N1_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ordersItem\":\"profile-orders-item_ordersItem__27Kso\",\"ordersItem__header\":\"profile-orders-item_ordersItem__header__1l7av\",\"ordersItem__footer\":\"profile-orders-item_ordersItem__footer__1T2Ag\",\"order__success\":\"profile-orders-item_order__success__1jbgY\",\"ordersItem__ingredients\":\"profile-orders-item_ordersItem__ingredients__3IqKy\",\"ordersItem__ingredient\":\"profile-orders-item_ordersItem__ingredient__YHjd5\",\"ordersItem__counter\":\"profile-orders-item_ordersItem__counter__30t9i\",\"ordersItem__price\":\"profile-orders-item_ordersItem__price__3nI71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order__box\":\"order-details_order__box__2oaWE\",\"order__number\":\"order-details_order__number__Xd6mH\",\"order__success\":\"order-details_order__success__2XXBF\",\"order__ingredientsBox\":\"order-details_order__ingredientsBox__2s1De\",\"ingredient\":\"order-details_ingredient__2ushq\",\"ingredient_img\":\"order-details_ingredient_img__8ZhIQ\",\"ingredient__title\":\"order-details_ingredient__title__M2wRG\",\"ingredient__price\":\"order-details_ingredient__price__1nfIp\",\"order__footer\":\"order-details_order__footer__1fAqz\",\"order__price\":\"order-details_order__price__2q2-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__J03XO\",\"nav\":\"app-header_nav__j3r36\",\"logo\":\"app-header_logo__2okpE\",\"navItem\":\"app-header_navItem__1pqIK\",\"active\":\"app-header_active__3RyX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"feed-order-element_element__2UkHZ\",\"element__header\":\"feed-order-element_element__header__3roaq\",\"element__footer\":\"feed-order-element_element__footer__3_OIx\",\"element__ingredients\":\"feed-order-element_element__ingredients__1wz0f\",\"element__ingredient\":\"feed-order-element_element__ingredient__1D5NE\",\"element__counter\":\"feed-order-element_element__counter__WewV3\",\"element__price\":\"feed-order-element_element__price__15KKk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__HGXoY\",\"ingredient__wrongID\":\"ingredient_ingredient__wrongID__3gRu_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__37deV\",\"ingredient__counter\":\"ingredient_ingredient__counter__3-YoE\",\"ingredient__price\":\"ingredient_ingredient__price__2P6l7\",\"ingredient__title\":\"ingredient_ingredient__title__1gF7b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__lwusA\",\"dropbox\":\"burger-constructor_dropbox__27dWX\",\"placeholder\":\"burger-constructor_placeholder__v6-Ti\",\"dropHover\":\"burger-constructor_dropHover__4DtMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__flex\":\"ingredients-section_section__flex__2PyQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__q1M0P\",\"header\":\"modal_header__2lLuR\",\"modalCloseBtn\":\"modal_modalCloseBtn__25XUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2KU95\",\"preloader_description\":\"preloader_preloader_description__2cmgx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"priceBox\":\"constructor-total-price_priceBox__wU3xD\",\"priceIcon\":\"constructor-total-price_priceIcon__ql694\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalFlex\":\"order-details_modalFlex__28ch9\",\"secondaryColor\":\"order-details_secondaryColor__2Yksf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__vGn3U\",\"feed__heading\":\"feed_feed__heading__2-HoW\"};"],"sourceRoot":""}